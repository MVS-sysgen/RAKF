             INTRODUCTION TO THE ESG SECURITY SYSTEM

                          (This documentation was prepared by
                           Sam Golob.
                           Please address questions to the author:
                              Craig Yasuna, (908) 549-4821   )

      The ESG Security System is a RACF-like interface to the MVS SAF
facility.  RACF Version 1.7 facilities are emulated, except for the
RACF database.  Two tables, the USERID and PROFILE tables, are kept in
storage.  The actual security verifications are made by the ICHRTX00
exit, using these two tables.  The formats of these USERID and PROFILE
tables are compatible with RACF database entry data.

      In this package, the USERID table is often called the "UDATA"
table, and the PROFILE table is called the "PDATA" table.

      The main practical difference between the effect of this
product and of "IBM RACF" on your system is that with this system,
users cannot change their passwords or their profiles.  The change is
done easily by an administrator.  After a table change (through ISPF
Edit), a PROC is started to refresh either the user table or the
profile table in core.  The administrator does not need to be trained
much, because the system structure is quite simple to maintain, once
it has been set up initially.

      Protection is achieved by routing all operating system or vendor
product security calls (including RACDEF, RACINIT, and RACHECK)
through an ICHRTX00 RACROUTE interface.  ICHRTX00 contains the real
verification code.  The ESG Security System is designed to force "one
point of handling" for all security calls.  ICHRTX00 processes the
various kinds of security calls in a standard way that is (mostly)
documented by IBM.  ICHRTX00 refers to the installation-coded user and
profile in-core tables, to make its judgments.  These in-core user and
resource tables are each reloadable at any time by the execution of
their special started tasks.

      The ESG Security "one point of handling" design, allows for more
complete control of the total data center environment.


INSTALLATION.

      Installation is achieved through assembling and linkediting the
CJYR---- assembler programs, the SVC 130, 131, and 133 programs, and
ICHRTX00.  Please reference the member $PARMS to see assembly and
linkedit parms.  The SVC 130, 131, and 133 programs need not be placed
in LPALIB.  They, and ICHRTX00, are linkedited into load module
CJYRINIT.  (Leave assembly of CJYRINIT for last.)  At security
initialization time, the SVCs and ICHRTX00 are dynamically copied into
getmained CSA.  (For this reason, any code changes to these modules
are not allowed to contain relocatable ADCONs whose values are not
determined at assembly time.)

      All programs may reside in a LINKLIST library, and should be
authorized.  To complete the installation, 3 procedures should be
cataloged:  CJYRINIT, CJYRUIDS, and CJYRPROF.  Samples are found in
this library as members:  #JYRINIT, #JYRUIDS, and #JYRPROF.  The
CJYRINIT procedure does not have to be used.  It need only be used if
the IEFSSN-- member of SYS1.PARMLIB is not updated with the subsystem
entry:  SEC,CJYRINIT    (see member IEFSSN00 in this library).  That
subsystem entry will initialize the presence of security in the
system, awaiting the execution of the other two procedures.

      If it is desired to initialize the security system as fast as
possible, the procedures CJYRUIDS and CJYRPROF may be executed in
SYS1.PARMLIB member IEACMD00, with ,SUB=MSTR.  Care must then be taken,
that the datasets pointed to by the INPUT ddnames be CATALOGED IN THE
MASTER CATALOG, so that they may be found.

      Before the procedures:  CJYRUIDS and CJYRPROF are executed,
ICHRTX00 will issue warning messages (but no access denials) for every
attempted dataset open.  This should flood the console somewhat.
These messages have been provided so that you can properly plan your
profile and userid table entries, especially as concerns dataset
access.  After the UDATA and PDATA tables have been initialized, these
messages will stop.

      A valid SYS1.UADS entry must be present for every TSO userid
to be used.  CICS users are defined by the security USERID table only.
The CICS signon table should be coded with only a default entry (see
our sample).  Members DFHPCT, DFHSIT, and DFHSNT in this library
describe sample settings for these respective CICS tables.  When
security is present, passwords coded in UADS will not be used, but the
ones in UDATA will be used.

      Please note that when MVS is informed that "security" is present
on the system, ALL PREVIOUSLY DEFINED PASSWORDS, INCLUDING VSAM
PASSWORDS, ARE IGNORED.  Any password protection must be reinstated by
the security system.  Evidently, the MVS designers wanted any
passwords designated by security, not to be interfered with by any
other password mechanisms in MVS.

      Be informed that the two "RACF" fields on the right side of the
TSO Logon screen, NEW PASSWORD and GROUP IDENT, are ignored by the
ESG Security System.  Also please note that in this version of the ESG
Security System, the RCVT is initialized as RACF Version 1.7, and this
should not be changed.


SETTING UP AND ENABLING THE USERID AND PROFILE TABLES.

      The way that protection will work on your system is entirely
up to your control.  Protection depends completely on the way you code
the USERID and PROFILE Data Tables.  ESG Security utilizes these
tables for its protection decisions, instead of using a RACF Database.
Sample tables have been provided.  These MUST NOT be used in your
installation as they are.  They have been made large enough to
(hopefully) help you code your own tables, but they are only examples.

      In order for both the UDATA and PDATA tables to be valid, THEY
MUST BE IN SORT ORDER.  Under ISPF Edit, the command "SORT 1 72", or
"SORT" is adequate to sort the records correctly (if they were coded
properly in the first place).  Sort errors will inhibit initialization
of the tables and will generate nasty error messages.

      In the PDATA table, DEFAULT, OR "UNIVERSAL" ACCESS FOR ANY
FACILITY OR DATASET MUST BE CODED before any specific access is coded.
You code a universal access entry in the PDATA table by leaving the
user group field blank.  Then you code other entries for the same
facility, specifying different settings for each user group that will
have special access (or denial of access) to that facility.

      Generally, only those features included in "IBM RACF Version 1.7"
have been emulated.

      The author of this system has referred to two RACF Manuals
during his planning.  It is important for all users of this package to
obtain these manuals also.  These are needed in the security
administration, which will be ongoing.

The two manuals are:


      SPL RACF           -   Referred to for information how to write
       (SC28-1343)           macros and return codes.

      RACF Administrator's Guide  -  Has an overview of profiles that
       (SC28-1340)                   should be used, and their
                                     structure.


      It is necessary to consult the RACF Administrator's Guide to
understand the reason for some of the special facility names in the
PDATA table, what they mean, and how to use them.  Some of these
special names are:  "FACILITY" (with particular dataset-like special
keywords, such as IEAABD.DMPAUTH, STGADMIN.*, or IEC.TAPERING, etc.),
and PROPCNTL (which suppresses userid propagation).  It is really
necessary to study the manual in order to control many parts of system
protection properly.  One need also study the manual to understand
APPL security.

      An example of the USERID table may be found in the member,
CJYUDATA.  An example of the PROFILE table may be found in the member,
CJYPDATA.  It is hoped that enough data is provided in these examples
to give a working knowledge for further coding and setting up.

      Please be informed that IN CORE, THESE TABLES WILL BE READ FROM
THE BOTTOM UPWARDS.


      USERDATA is coded as follows:

  Cols   1 -  8         USERID (TSO, CICS, or whatever application)
  Cols  10 - 17         User Group   (Installation defined)
  Col   18              Asterisk '*' to denote that multiple user
                         groups exist for this userid.
                         Otherwise blank.
  Cols  19 - 26         Password
  Col   28              Operation Authority  (Y or N)   If "Y", then
                         access is always granted to this user unless
                         it is denied explicitly.
  Col   31 - 50         Comment field (ignored by ESG Security but
                         used by "IBM RACF").
  Cols  51 - 80         Ignored


      PROFILE DATA is coded as follows:

  Cols   1 -  8         Facility title: (APPL, DASDVOL, DATASET, etc.)
                         See the RACF Administrator's Guide.  You
                         need to know the different facility types
                         used by the operating system, CICS, TP
                         products, and vendor products.
  Cols   9 - 52         Dataset Name, or Generic Name, or Name to be
                         protected.  (Generics are achieved using
                         the asterisk '*'.  See the examples.)
  Cols  53 - 60         User Group Id  (Installation defined)
                         Blanks in this field denote universal access
                         rules for this resource.
  Cols  61 - 66         Permission Level (NONE, READ, UPDATE, ALTER)
  Cols  67 - 72         Blank


      I must reemphasize that your security protection is completely
dependent on how you code these tables.  Please get most of your
knowledge from the RACF Administrator's Guide.

MORE REMARKS.

      In order for CICS users and transactions to be protected,
entries need to be made in the SIT, PCT, and SNT tables.  See the
included DFH--- members, and refer to the appropriate CICS manuals.
Basically, the parameter "EXTSEC=YES" (meaning that external security
is turned on) has to be coded in these entries.  The CICS Signon Table
should only contain one default entry.  All users will be granted
admission or denial through the security system's UDATA table.  In our
PDATA member, the proper FACILITY NAME has to be used for each
transaction protected under CICS.  Our sample facility name is
TD1XXTRN, which was set up in the SIT's XTRAN parameter as
XTRAN=D1XXTRN.  (See our sample member DFHSIT.  CICS itself supplies
the initial "T" in the facility name.)

      To protect other products, they must have an interface to the
security system.  For example, a PANVALET exit was used to regulate
access to PANVALET library members.  This exit may be obtained as a
sample exit from Pansophic Systems, the vendor for the Panvalet
product.  The name of their sample is "PVRACF".

      I have to say a word about userids in the UDATA table that were
set up with MULTIPLE GROUP ENTRIES.  These will get the highest
authority for all protected objects in all the groups.  As a practical
example, multiple groups are used for managers who oversee the work of
several programming groups.  The multiple group arrangement gives these
managers access to everything done by all the groups under them.

      Batch jobs and STCs are controlled as follows:  All batch jobs
default to a userid of PROD and a user group of PRDGROUP.  Started
tasks are forced a userid of STC and a user group of STCGROUP.  This
default is imposed by ICHRTX00.  Any job that has no userid connected
to it is assigned a userid of PROD and a user group of PRDGROUP by
ICHRTX00.  That situation is true for jobs submitted by RJE, by NJE,
or by a local (card) reader.  The specific authority of PRDGROUP and
STCGROUP is controlled by the PDATA table.

      Upon initial setup of the security system, PRDGROUP can be given
rather broad powers.  According to the default coding of ICHRTX00,
PRDGROUP is given Operations Authority, which means that any resource
NOT SPECIFICALLY EXCLUDED, is granted to PRDGROUP.  (Operations
authority may be taken away from PRDGROUP by a simple coding change.
Find label PRODUID in ICHRTX00.  Change the last C'Y' to C'N'.)

      The security system AS DELIVERED, does the following.  All STC's
themselves have a userid of STC, Operations Authority, and any powers
granted to STCGROUP in the PDATA member.  However, the PDATA member
(as delivered) has a special entry of "PROPCNTL STC".  This entry has
the effect of suppressing userid propagation of the userid "STC" from
any job that a started task submits.  The job submitted by a started
task then has NO USERID attached to it.  But ICHRTX00 goes and assigns
all jobs with NO USERID, a default userid of PROD and a default user
group of PRDGROUP (as we have stated).  So STC's will have different
authority than the jobs they submit.  This can be regulated as the
installation desires, usually by granting STC's more authority than
production jobs.

      That is the state of affairs if the default arrangement is
followed.  A suggestion for shops who want to better regulate batch
jobs has been advanced by IBM itself.  It will work under the ESG
Security System, because the ESG Security System follows IBM
specifications, and uses the documented SAF interface faithfully.

      The installation (after initial install) may later choose to do
the following:  Turn off Operations Authority from PROD in ICHRTX00
(as described above).  In PDATA, give the PRDGROUP very little power.
Then, require all batch jobs to use the "USER=" and "PASSWORD="
parameters in the JOB card.  This has to be planned carefully.
Perhaps, one initial userid, with the same power as the PROD userid
used to have, could be assigned.  In any case, appropriate userids and
user groups must already be in place in the PDATA member, to immediately
handle protection of the regulated batch jobs.

      Then, the installation can plan to split the jobs into more
user groups with separate userids that are more finely regulated.
Perhaps at first, Operations Authority could be granted to these batch
userids.  That extra margin of authority might later be taken away
after their requirements have been further refined and evaluated.


FURTHER COMMENTS.  EASE OF CONVERSION TO IBM RACF.

      I want to tell you that this product can be used as a precursor
to "IBM RACF" installation.  By itself, this product is perfectly
adequate for many shops.  However, a shop where this product was
running was converted to IBM RACF, and the tables were compatible.
The following was done:

      In the PDATA member:

  ADDSD   was done for cards denoting "universal access" for DATASETs.
  PERMIT  was done for cards denoting  special access    for DATASETs.
  RDEFINE was done for cards referencing a FACILITY other than datasets.
  PERMIT  was done for cards denoting  special access    for facilities
      other than datasets.

      Only minor format changes to the PDATA card images were
necessary, to put them into a form that was runnable in a CLIST.

      In the UDATA member:

  ADDUSER was done for cards denoting any user.
  CONNECT was done for cards denoting multiple group membership for
      one user.

      Only minor format changes to the UDATA card images were
necessary, to put them into a form that was runnable in a CLIST.

      A small RACF exit had to be written to allow preassignment of
userids and passwords for batch jobs, NJEs and RJEs.

      For more help, please refer to the RACF Administrator's Guide.

      Good luck.

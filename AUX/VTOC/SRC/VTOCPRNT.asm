VTOCPRNT TITLE 'VTOC COMMAND PRINT ROUTINE'
***********************************************************************
*                                                                     *
*                                                                     *
* TITLE -      VTOC COMMAND PRINT ROUTINE                             *
*                                                                     *
* FUNCTION -   PRINT THE DATA PASSED TO IT.  IT WILL USE THE DDNAME   *
*              SYSOUT IF IT IS ALLOCATED, AND WILL USE THE VTOCMSG    *
*              ROUTINE IF NOT.  IT CAN ALSO PUT OUT THE DATA TO       *
*              AN OUTPUT DATA SET.  TOTALS ARE COMPUTED HERE.         *
*                                                                     *
* OPERATION -  FOR UNSORTED DATA, GET THE CURRENT ENTRY, ADD TO THE   *
*              TOTALS, AND OUTPUT IT.  IF THE DATA IS SORTED, THE     *
*              ACTION IS MORE COMPLEX, BECAUSE ALL THE DATA SETS      *
*              ARE TO BE OUTPUT.  THE TOTALS AND BREAKS MAY BE        *
*              NEEDED AT ANY POINT.                                   *
*                                                                     *
* INPUT -      VTOC COMMON AREA ( VTOCOM )                            *
*              POINTED TO BY REGISTER 1                               *
*              USE PARSE DATA, CURRENT FORMATTED DSCB, SORTED LIST    *
*                                                                     *
* OUTPUT -     TO SYSOUT, A LIST OF THE REQUESTED DATA SETS AND       *
*              THEIR ATTRIBUTES, WITH TOTALS AND BREAKS AS NEEDED.    *
*              ALSO TO THE OUTPUT DATA SET, IF NEEDED.  IF SYSOUT     *
*              IS NOT ALLOCATED, VTOCMSG IS USED FOR OUTPUT.          *
*                                                                     *
* ATTRIBUTES - REENTRANT, REUSEABLE, REFRESHABLE.                     *
*                                                                     *
*                                                                     *
*         PROGRAMMED BY R. L. MILLER  (415) 485-6241                  *
*                                                                     *
*                                                                     *
*   1/4/83 UPDATED CODE TO PROCESS CYLS,KBYTES,MBYTES     LMB 1/4/83  *
*          LAUREEN BEAUCHAINE  -  CBT                     LMB 1/4/83  *
*                                                                     *
* 9/26/84 - MODIFIED BY A. BRUCE LELAND AT HITACHI TO CORRECT   ABL-EXT
*           LIM(EX GT 2) TO MEAN EXTENTS (NOT EXPDT).           ABL-EXT
*                                                                     *
***********************************************************************
*
*        MACRO FOR DEFINING FAKE PDE FOR A DEFAULT LIST
*
         EJECT
VTOCPRNT ENTER 12,20          DO THE HOUSEKEEPING
         LR    R11,R1         SAVE ADDR OF VTOCOM
         USING VTOCOM,R11     SET ITS ADDRESSABILITY
         L     R9,ADDRANSR    POINT TO THE PARSE ANSWER
         USING PDL,R9         SET ITS ADDRESSABILITY
         USING PRNTWORK,R13   SET ADDRESSABILITY FOR LOCAL WORK AREA
         SPACE 3
*
*        CHECK FOR THE PRINT CLEAN - CLOSE AND FREEMAIN
*
         CLI   VTCEPRNT,0     IS IT TIME
         BNE   PRNTCLEN       YES, GO DO IT
*
*        CHECK FOR THE FIRST TIME THROUGH
*        IF SO, SET UP THE DCB'S AND OPEN THEM
*
         CLI   FIRSTIM,0      IS THIS THE FIRST TIME?
         BNE   CHKSORT        NO, KEEP ON TRUCKIN'
         B     PRTINIT    INITIALIZE FOR PRINTING
*
*        CHECK TO SEE IF THE DATA IS SORTED
*
CHKSORT  CLI   SORTK+1,2      IS THIS NOSORT?
         BNE   SORTED         NO, THE ENTRIES ARE SORTED
*
*        NOSORT WAS SPECIFIED.  ONLY THE CURRENT ENTRY IS AVAILABLE
*
         L     R3,FORMATAD    POINT TO THE ENTRY
         USING VTFMT,R3       FORMATTED DSCB ADDRESSABILITY
         LTR   R3,R3          IS IT THERE?
         BZ    CHEKTOT        NO, SEE IF A TOTAL HAS BEEN OUTPUT
         XC    FORMATAD,FORMATAD  CLEAR THE ADDRESS FOR LATER
*
*        ADD TO THE TOTALS
*
         BAL   R8,ADDTOT      GO DO IT
*
*        SEE IF THE OUTPUT DATA SET IS WANTED
*
         TM    OUTDCB+48,X'10'  IS THE DCB OPEN?
         BNO   NOOUTPT        NO, SKIP ALONG
         BAL   R8,OUTPUT      YES, GO DO IT
*
*        SEE IF THERE'S PRINTING TO DO
*
NOOUTPT  CLI   PRINTK+1,2     WAS NOPRINT SPECIFIED?
         BE    VTRET          YES, WE'RE DONE FOR NOW
         BAL   R8,PRINT       NO, PRINT OUT THE ENTRY
*
*        RETURN FROM WHENCE WE CAME
*
VTRET    LEAVE EQ,RC=0        EXEUNT
*
*        NOSORT, CHECK FOR OUTPUTTING THE TOTALS
*
CHEKTOT  TM    ENDTOTAL,ENTOTOUT  WAS THE TOTAL OUTPUT BEFORE?
         BO    VTRET          YES, JUST RETURN
         BAL   R8,PRNTOT      NO, OUTPUT THE TOTAL
         OI    ENDTOTAL,ENTOTOUT  REMEMBER THE TOTAL IS OUT
         B     VTRET          THEN RETURN
         EJECT
*
*        THE DATA IS SORTED, SO THE LISTS MUST BE EMPTIED.
*        CHECK EACH ITEM FOR A TOTAL AND FOR A BREAK
*        OUTPUT TO PRINT AND/OR THE OUTPUT DATA SET
*
*
*        FIRST GET THE TOTAL AND BREAK COUNTS FOR COMPARES
*
SORTED   LA    R1,TOTALN      POINT TO THE TOTAL PDL
         BAL   R8,PDLNUM      CONVERT IT TO A NUMBER
         LTR   R15,R15        IS IT ZERO?
         BNZ   SETTNUM        NO, IT'S GOOD
         OI    ENDTOTAL,ENDTONLY  YES, TOTALS AT THE END ONLY
SETTNUM  BCTR  R15,0          CUT IT DOWN ONE
         STH   R15,NUMTOTAL   SET THE TOTAL COUNT
         LA    R1,BREAK       POINT TO THE BREAK PDL
         BAL   R8,PDLNUM      CONVERT IT TO A NUMBER
         LTR   R15,R15        IS IT ZERO?
         BNZ   SETBNUM        NO, IT'S GOOD
         OI    ENDTOTAL,NOBREAK   YES, BREAK  AT THE END ONLY
SETBNUM  BCTR  R15,0          CUT IT DOWN ONE
         STH   R15,NUMBREAK   SET THE BREAK COUNT
*
*        START GOING THROUGH THE LISTS, PROCESS THE ENTRIES
*
         LA    R4,VTCSORTH    POINT TO THE LISTS
         LA    R5,VTCSORTE    POINT TO THE END OF THE LISTS
         ST    R5,ADDREND     SAVE THE ADDRESS
NEWLIST  L     R3,0(R4)       GET THE FIRST ENTRY FROM THIS LIST
         LTR   R3,R3          ANYTHING ON THIS LIST?
         BZ    NEXTLIST       NO, GET ANOTHER LIST
*
*        THIS IS AN ENTRY, DO THE TOTALS, PRINT, AND OUTPUT
*        CHECK FOR TOTALS AND BREAKS FIRST
*
GOTENTRY CLI   PRINTK+1,2     WAS NOPRINT SET?
         BE    CHKOUTPT       YES, SKIP INTERIM TOTALS
         MVI   TOTLAST,0      SET UP FLAG FOR TOTAL AS LAST ACTION
*        NOTE - EXTENSION - OUTPUT INTERIM TOTALS WITH THE KEY
         TM    ENDTOTAL,ENDTONLY  END TOTAL ONLY?
         BO    CHKBREAK       YES, SEE ABOUT BREAKS
         LH    R2,NUMTOTAL    GET THE LENGTH TO COMPARE
         L     R1,LASTKEY     GET THE LAST ENTRY
         EX    R2,COMPKEY     SEE IF THIS IS THE SAME
         BE    CHKBREAK       YES, KEEP COUNTING
*
*        THIS ONE IS DIFFERENT, PRINT THE TOTALS FIRST
*
         BAL   R8,PRNTOT      PRINT THE TOTALS
*
*        CHECK FOR A BREAK
*
CHKBREAK TM    ENDTOTAL,NOBREAK   NO BREAKS THIS TIME?
         BO    SKPBREAK       YES, SKIP PAST BREAKS
         LH    R2,NUMBREAK    GET THE LENGTH TO COMPARE
         L     R1,LASTKEY     GET THE LAST ENTRY
         EX    R2,COMPKEY     SEE IF THIS IS THE SAME
         BE    SKPBREAK       YES, KEEP COUNTING
*
*        THIS ONE IS DIFFERENT, GET A NEW PAGE
*
         MVC   LINECT,LINEMAX BE SURE THE NEXT ITEM GETS A NEW PAGE
         MVI   TOTLAST,0      DON'T SKIP A LINE AFTER TOTAL
         LA    R1,VTFDSN     POINT TO THE DSNAME
         ST    R1,LASTKEY    SAVE THE ADDRESS FOR BREAK COMPARES
*
*        PRINT THE ITEM
*
SKPBREAK CLI   TOTLAST,0      WAS A TOTAL NOT FOLLOWED BY A BREAK?
         BE    SKPBREA2       NO, CONTINUE NORMALLY
         MVC   MSGBL,MSGBLC   YES, SET UP A BLANK MESSAGE
         LA    R1,MSGBL       POINT TO IT
         BAL   R8,PRNTLINE    THEN PUTPUT IT
SKPBREA2 BAL   R8,PRINT       FINAL FORMAT AND PRINT
*
*        CHECK FOR DATA SET OUTPUT
*
CHKOUTPT TM    OUTDCB+48,X'10'     IS IT OPEN AND READY
         BNO   GOTOT          NO, GO DO THE TOTALS
         BAL   R8,OUTPUT      YES, PUT OUT THE DATA SET ENTRY
*
*        ADD UP THE TOTALS
*
GOTOT    BAL   R8,ADDTOT      SUM THEM
*
*        GET THE NEXT ENTRY
*
         ICM   R3,B'1111',VTFNEXT  FOLLOW THE CHAIN
         BNZ   GOTENTRY       SOMETHING'S THERE, USE IT
*
*        END OF THIS LIST, TRY THE NEXT LIST
*
NEXTLIST LA    R4,12(0,R4)    MOVE OVER ONE
         C     R4,ADDREND     WAS THAT THE LAST LIST?
         BL    NEWLIST        NO, KEEP TRYING
*
*        END OF THE LISTS, OUTPUT THE FINAL TOTAL AND RETURN
*
         BAL   R8,PRNTOT      LIST THE TOTAL
*
*        CLEAR OUT THE PRINT LISTS
*
         XC    VTCSORTH+000(256),VTCSORTH  CLEAR 64 ENTRIES
         XC    VTCSORTH+256(256),VTCSORTH+256 CLEAR 64 ENTRIES
         XC    VTCSORTH+512(256),VTCSORTH+512 CLEAR 64 ENTRIES
         XC    VTCSORTH+768(256),VTCSORTH+768 CLEAR 64 ENTRIES
         B     VTRET          THEN GET OUT OF HERE
         EJECT
*
*        PRINT CLEANUP ROUTINE - CLOSE DCB'S FIRST
*
PRNTCLEN TM    SYSOUT+48,X'10'  IS SYSOUT OPEN?
         BNO   PRNTCLO        NO, CHECK THE OUTDCB
         CLOSE (SYSOUT),MF=(E,OPENLIST)  DO THE CLOSE
PRNTCLO  TM    OUTDCB+48,X'10'  IS OUTDCB OPEN?
         BNO   PRNTFREE       NO, SKIP DOWN TO THE FREEMAINS
         CLOSE (OUTDCB),MF=(E,OPENLIST)  DO THE CLOSE
*
*        FREE UP THE STORAGE
*
PRNTFREE LA    R2,VTCGETMN    POINT TO THE TABLE
         LA    R5,VTCGETMX    GET THE NUMBER OF ENTRIES IN THE TABLE
PRNTFRL  ICM   R3,B'1111',0(R2)  GET THE STORAGE ADDRESS
         BZ    VTRET          IF ZERO, WE'RE DONE
         FREEMAIN R,LV=VTCGETMS,A=(R3)  FREE IT
         XC    0(4,R2),0(R2)  CLEAR THE ADDRESS
         LA    R2,4(R2)       GET THE NEXT BLOCK ADDRESS
         BCT   R5,PRNTFRL     AND LOOP UNTIL DONE
         B     VTRET          THEN RETURN
*
         EJECT
*
*        ROUTINES USED ABOVE
*              ADDTOT - ADD TO THE CURRENT TOTALS
*              PRNTOT - PRINT OUT THE TOTALS AND CLEAR THEM
*              PRINT  - PRINT OUT AN ENTRY
*              OUTPUT - OUTPUT THE DATA SET ENTRY
*              PDLNUM - GET A NUMBER FROM A PDL ENTRY
*              PRNTLINE - INTERNAL ROUTINE TO COUNT LINES, OUTPUT HEAD
*
ADDTOT   L     R1,TOTDS       NUMBER OF DATA SETS
         LA    R1,1(R1)       ADD ONE
         ST    R1,TOTDS       STORE IT BACK
         L     R1,TOTALLOC    TOTAL ALLOCATION
         A     R1,VTFALLOC    ADD IN THIS DATA SET
         ST    R1,TOTALLOC    STORE IT BACK
         L     R1,TOTUSED     TOTAL USED SPACE
         A     R1,VTFUSED     ADD IN THIS DATA SET
         ST    R1,TOTUSED     STORE IT BACK
         BR    R8             RETURN
*
         EJECT
*
*        PRINT THE TOTALS
*              FIRST FORMAT THEM, THEN PUT THE LINE OUT TO SYSOUT
*              OR USE VTOCMSG TO LIST IT
*
PRNTOT   ST    R8,PRNTTOT8   SAVE THE RETURN ADDRESS
         MVC   MSGWORK(MSGTLEN),MSGTOTC  INIT THE MSG
         CONV  MSGWORK+4+11,TOTDS,5  CONVERT NO OF DATA SETS
         CONV  MSGWORK+4+28,TOTALLOC,8  CONVERT ALLOCATION
         CONV  MSGWORK+4+51,TOTUSED,8   CONVERT USED SPACE
         MVC   MSGWORK+4+37(6),SPACTYPE MOVE IN THE UNITS LMB 1/4/83
         MVC   MSGWORK+4+60(6),SPACTYPE MOVE IN THE UNITS LMB 1/4/83
*
*        NOW OUTPUT THE MESSAGE
*
         MVI   MSGWORK+4,C'0' ADD A CARRIAGE CONTROL
         LA    R1,MSGWORK     POINT TO THE TOTAL LINE
         BAL   R8,PRNTLINE    PUT OUT THE TOTAL LINE
         MVI   TOTLAST,1      NOTE THAT A TOTAL WAS THE LAST ITEM
         L     R8,PRNTTOT8    GET THE RETURN ADDRESS
         BR    R8             THEN RETURN
         EJECT
*
*        PRINT OUT THE FORMATTED DSCB
*              FIRST FORMAT IT
*
PRINT    ST    R8,PRINTR8     SAVE REGISTER 8 FOR RETURNING
         MVI   WORKLINE+4,C' ' BLANK OUT THE LINE
         MVC   WORKLINE+5(250),WORKLINE+4 SO INDIVIUAL FIELDS DON'T
         L     R2,VTPRNTLS   GET THE PRINT ITEM LIST
         LA    R1,WORKLINE+4  POINT TO THE WORK  LINE
PRTLOOP  SR    R6,R6          GET THE RESERVED WORD NUMBER
         IC    R6,0(R2)       FROM THE TOP BYTE
         MH    R6,H12         MULTIPLY BY 12 FOR THE TABLE ENTRIES
         LA    R6,TABTITL(R6) THEN RELOCATE THE MESS
         SR    R7,R7          CLEAR A REGISTER
         IC    R7,0(R6)       GET THE EXECUTE LENGTH
         LA    R5,1(R1)       SAVE A PLACE TO MOVE FIELD INTO
         LA    R1,1(R1,R7)    MOVE THE POINTER OVER
         LA    R0,WORKLINE+4  POINT TO THE BEGINNING AGAIN
         SR    R1,R0          AND FIND THE CURRENT LENGTH
         CH    R1,LINELEN     IS IT TOO LONG?
         BNL   PRTEND         YES, WE'RE DONE
         AR    R1,R0          NO, KEEP GOING
*
*        MOVE IN OR CONVERT THIS ITEM
*
         SR    R14,R14       CLEAR A REG FOR LENGTH OF RTN NO
         IC    R14,1(R6)     GET THE LENGTH OR ROUTINE
         N     R14,F127      CLEAR THE TOP BIT
         SR    R15,R15       CLEAR A REG FOR VTFMT
         IC    R15,2(R6)       DISPLACEMENT
         AR    R15,R3        RELOCATE IT
*
*        DECIDE WHERE TO PUT IT
*
         TM    1(R6),X'80'   IS IT IN CHARS
         BNO   PRTRTN        NO, USE THE SPECIAL ROUTINE
         SR    R7,R14        GET THE DIFFERENCE IN LENGTHS
         SRL   R7,1          GET HALF THE DIFFERENCE
         AR    R5,R7         PUT THE DATA HERE
         EX    R14,PRTMOVE   MOVE IN THE CHARACTERS
PRTINC   LA    R2,1(R2)            GET THE NEXT CHAIN POINTER
         CLI   0(R2),0       ARE WE DONE?
         BNE   PRTLOOP        GO GET MORE ITEMS
PRTEND   LA    R1,WORKLINE   POINT TO THIS LINE
         BAL   R8,PRNTLINE   THEN GO PRINT IT
         L     R8,PRINTR8     GET THE RETURN ADDRESS
         BR    R8             RETURN
PRTMOVE  MVC   0(0,R5),0(R15)  EXECUTED MOVE
*
*        VARIOUS ROUTINES TO FORMAT BEFORE MOVING IN THE DATA
*
PRTRTN   LTR   R14,R14       BE SURE THE OFFSET IS OK
         BP    PRTRTN1        IT SEEMS ALL RIGHT
         ABEND 701,DUMP       CRASH AND BURN
PRTRTN1  B     *(R14)        GO DO YOUR THING
         B     PRDATES        4  CDATE, EXPDT
         B     PRLSTUS        8  LSTUS
         B     PRALLOC       12  ALLOC, USED
         B     PRUNUSED      16  ALLOC - USED
         B     PRPCT         20  100 * USED / ALLOC
         B     PREXT         24  EXT
         B     PRBLREC       28  BLKSZ LRECL
         B     PRDSN         32  DSNAME
*
*
*        CDATE AND EXPDT
*
PRDATES  SR    R14,R14       CLEAR REG FOR YEAR
         IC    R14,0(R15)    GET THE YEAR
         USING DUMMD,R5      ALLOW CONV TO USE SYMBOL
         CONV  DUMMA,(R14),2 CONVERT YEAR
         ICM   R14,B'0011',1(R15)  GET THE DAY
         CONV  DUMMA+2,(R14),3,EDMASK0,COMP0  CONVERT THE DAY
         B     PRTINC        GO GET MORE PRINT ITEMS
*
*        LAST USE DATE
*
PRLSTUS  MVC   CHARS,EDMASK   SET UP THE EDIT MASK
         ED    CHARS(6),0(R15)  CONVERT TO CHARACTERS
         MVC   0(5,R5),CHARS+1  THEN MOVE THEM IN
         B     PRTINC        GO GET MORE PRINT ITEMS
*
*        ALLOCATION AND USED
*
PRALLOC  ICM   R14,B'1111',0(R15)  GET THE AMOUNT
         BM    PRUNKN6       IF NEGATIVE, IT'S NOT KNOWN
         CONV  DUMMA,(R14),6 CONVERT THE NUMBER
         B     PRTINC        GO GET MORE PRINT ITEMS
PRUNKN6  MVC   0(6,R5),BLANKS  UNKNOWN AMOUNT, LEAVE IT BLANK
         B     PRTINC        GO GET MORE PRINT ITEMS
*
*        UNUSED SPACE
*
PRUNUSED ICM   R14,B'1111',VTFUSED  GET THE   USED SPACE
         BM    PRUNKN6       IF NOT KNOWN, SKIP ALONG
         L     R14,VTFALLOC  GET THE ALLOCATED SPACE
         S     R14,VTFUSED   MINUS THE USED SPACE GIVES UNUSED
         BZ    PRTINC        IF NO UNUSED SPACE, LEAVE BLANK
         CONV  DUMMA,(R14),6 CONVERT FOR PRINTING
         B     PRTINC        GO GET MORE PRINT ITEMS
*
*        PCT - PERCENTAGE USED
*
PRPCT    SR    R6,R6         CLEAR THE TOP PART OF THE NUMBER
         ICM   R7,B'1111',VTFUSED   GET THE AMOUNT OF USED SPACE
         BM    PRUNKN3       IF NOT KNOWN, LEAVE BLANK
         CLC   VTFALLOC,ZERO IS THE ALLOCATION ZERO?
         BNE   PRPCTM        NO, DO THE STANDARD STUFF
         CLC   VTFUSED,ZERO  IS THE USED SPACE ZERO?
         BE    PRUNKN3       YES, JUST USE BLANKS
PRPCTERR MVC   0(3,R5),=C'ERR'  NO, IT'S AN ERROR
         B     PRTINC        THEN GO TRY FOR MORE
PRPCTM   M     R6,F100       MULTIPLY BY 100 FOR PERCENT
         D     R6,VTFALLOC   DIVIDE BY ALLOC TO GET THE PERCENT
         LTR   R7,R7         IS IT LESS THAN ZERO?
         BM    PRPCTERR      YES, FLAG THE ERROR
         C     R7,F100       ALSO CHECK FOR OVER 100 PERCENT
         BH    PRPCTERR      THAT'S ALSO AN ERROR
         CONV  DUMMA,(R7),3  CONVERT FOR PRINTING
         B     PRTINC        GO GET MORE PRINT ITEMS
PRUNKN3  MVC   0(3,R5),BLANKS BLANK THE UNKNOWN
         B     PRTINC        GO GET MORE PRINT ITEMS
*
*        EXTENTS
*
PREXT    SR    R14,R14       CLEAR REG FOR YEAR
         IC    R14,0(R15)    GET THE YEAR
         CONV  DUMMA,(R14),2 CONVERT THE EXTENTS
         B     PRTINC        GO GET MORE PRINT ITEMS
*
*        LRECL AND BLKSZ
*
PRBLREC  LH    R14,0(R15)    GET THE DATA ( HALFWORD )
         CONV  DUMMA,(R14),5  CONVERT THE DATA
         B     PRTINC        GO GET MORE PRINT ITEMS
*
*        DATA SET NAME
*
PRDSN    LH    R14,VTFDSNL   GET THE DSNAME LENGTH
         CH    R14,DSNLENGT  CHACK FOR MAX LENGTH
         BL    PRDMOVE       THIS DSN IS SHORT ENOUGH
         LH    R14,DSNLENGT  CUT IT DOWN
PRDMOVE  BCTR  R14,0         COUNT DOWN ONE FOR THE EX
         EX    R14,PRTMOVE   MOVE IN THE DSNAME
         AH    R1,DSNLENOF   CORRECT THE LINE POINTER
         B     PRTINC        GO GET MORE PRINT ITEMS
         EJECT
*
*        OUTPUT THE FORMATTED DSCB AS IT IS
*
OUTPUT   CLEAR OUTWORK       CLEAR THE OUTPUT REC
         LH    R2,VTFDSNL     GET THE LENGTH OF THE DSNAME
         LA    R2,VTFMTL-1(R2)  GET THE FULL LENGTH MINUS ONE
         EX    R2,OUTMOVE    MOVE IN THE ACTUAL RECORD
         PUT   OUTDCB,OUTWORK    OUTPUT THE RECORD
         BR    R8             RETURN
OUTMOVE  MVC   OUTWORK(0),0(R3)  EXECUTED MOVE
         EJECT
*
*        PDLNUM - CONVERT FROM CHARACTERS ( EBCDIC ) TO AN INTEGER
*              BINARY FORM, PASSED BACK VIA REGISTER 15
*              A PARSE PDE IS THE INPUT AS SHOWN IN THE SAMPLE BELOW
*                       LA    R1,PDL     POINT TO THE PARSE DECRIPTION
*                       BAL   R8,PDLNUM  GO CONVERT TO NUMERICS
*              THE ROUTINE WILL TERMINATE IF IT FINDS NON-NUMERICS
*                 ANY CHARACTERS OTHER THEN 0-9, +, -
*              REGISTERS 1, 2, 5, 6, AND 7 ARE USED
*
PDLNUM   STM   R1,R8,PDLNSAVE SAVE THE REGISTERS
         LH    R2,4(R1)       GET THE STRING ADDRESS
         L     R1,0(R1)       GET THE STRING ADDRESS
         MVI   PDLMINUS,0     CLEAR THE NEGATIVE NUMBER FLAG
         SR    R5,R5          CLEAR THE CHARACTER COUNTER
         SR    R15,R15        CLEAR THE ANSWER
PDLLOOP  LA    R6,0(R5,R1)    POINT TO THIS DIGIT
         LA    R5,1(R5)       GET TO THE NEXT DIGIT
         CR    R5,R2          IS THIS THE END OF THE STRING?
         BH    PDLFINI        YES, EXIT
         SR    R7,R7          CLEAR A WORK REGISTER
         IC    R7,0(R6)       GET THE CHARACTER
         SH    R7,PDLH240     SUBTRACT THE CHARACTER C'0'
         BM    PDLSP          IF NEGATIVE, CHECK SPECIAL CHARACTERS
         MH    R15,PDLH10     IT'S A DIGIT, MULTIPLY PRIOR NUM BY TEN
         AR    R15,R7         ADD ON THE NEW DIGIT
         B     PDLLOOP        AND LOOP FOR MORE
*
*        CHECK FOR SPECIAL CHARACTERS
*
PDLSP    CLI   0(R6),C' '     IS IT A BLANK?
         BE    PDLLOOP        THEN IT'S OK
         CLI   0(R6),C'+'     IS IT A PLUS?
         BE    PDLLOOP        THAT'S ALSO OK
         CLI   0(R6),C'-'     IS IT A MINUS?
         BNE   PDLFINI        NO, JUST QUIT
         MVI   PDLMINUS,1     YES, NOTE IT
         B     PDLLOOP        AND LOOK FOR MORE
*
*        QUIT, AFTER SETTING R15 TO NEGATIVE IF NEEDED
*
PDLFINI  CLI   PDLMINUS,1     WAS A MINUS SIGN FOUND?
         BNE   PDLLEAVE       NO, EXIT
         LNR   R15,R15        YES, MAKE IT NEGATIVE
PDLLEAVE LM    R1,R8,PDLNSAVE RESTORE THE REGISTERS
         BR    R8             RETURN
PDLH10   DC    H'10'
PDLH240  DC    H'240'
         EJECT
*
*        PRNTLINE - GET EACH LINE FOR SYSOUT, THEN COUNT THE LINES
*              OUTPUT HEADERS AND TITLE LINES AS NECESSARY
*
PRNTLINE STM   R1,R8,PRTLSAVE SAVE THE REGISTERS
         TM    SYSOUT+48,X'10' IS SYSOUT OPEN FOR BUSINESS?
         BNO   PRNTTERM       NO, IT'S NOT OPEN, USE VTOCMSG
         CLI   HEADK+1,2     NOHEADING REQUEST?
         BE    PRNTLIN       YES, JUST OUTPUT THE DATA LINE
*
*        DO THE LINE COUNTING
*
         LH    R2,LINECT      GET THE LINE COUNT
         CLI   4(R1),C'1'     IS IT REQUESTING A NEW PAGE?
         BE    PRNTPAGE       YES, DO IT
         CLI   0(R1),C'-'     SKIP 3 LINES
         BE    PRNTSKP3       YES, TRY IT
         CLI   0(R1),C'0'     SKIP 2 LINES?
         BE    PRNTSKP2       YES, DO IT
         B     PRNTSKP1       JUST SKIP ONE
PRNTSKP3 LA    R2,1(R2)       ADD ONE TO THE LINE COUNT
PRNTSKP2 LA    R2,1(R2)       ADD ONE TO THE LINE COUNT
PRNTSKP1 LA    R2,1(R2)       ADD ONE TO THE LINE COUNT
         STH   R2,LINECT      SAVE THE LINE COUNT
         CH    R2,LINEMAX     DOES THIS OVERFLOW  HE PAGE?
         BL    PRNTLIN        NO, JUST PUT OUT THIS LINE
*
*        PRINT OUT THE PAGE HEADER AND ITEM TITLES
*
PRNTPAGE LH    R6,PAGECT      GET THE PAGE COUNT
         LA    R6,1(R6)       ADD ONE TO IT
         STH   R6,PAGECT      THEN STORE IT BACK
         L     R7,PAGEADDR    GET THE PLACE TO PUT THE PAGE
         USING DUMMD,R7       DUMMY DSECT
         CONV  DUMMA,(R6),5   GET THE CHARACTERS
         DROP  R7
         ST    R1,PRNTLSAV    SAVE THE INPUT REG1
         PUT   SYSOUT,PRNTHEAD  OUTPUT THE HEADER
         PUT   SYSOUT,PRNTTITL  OUTPUT THE ITEM TITLES
         L     R1,PRNTLSAV    GET THE ORIGINAL LINE
         MVI   4(R1),C'0'     ALWAYS SKIP THE FIRST LINE AFTER NEW PAGE
         LA    R7,5           SET THE LINE COUNT
         STH   R7,LINECT      SAVE IT FOR LATER
PRNTLIN  CLEAR OUTWORK       CLEAR A PRINT RECORD
         LH    R6,0(R1)      GET THE RECORD LENGTH
         SH    R6,H5         MINUS 4 FOR PREFIX, 1 FOR EX
         LA    R3,4(R1)      POINT TO THE TEXT
         EX    R6,OUTMOVE    THEN MOVE IN THE LINE
         PUT   SYSOUT,OUTWORK      AND FINALLY PRINT IT
         B     PRNTLRET       THEN RETURN
*
*        SIMPLER CHECKING FOR VTOCMSG OUTPUT
*
PRNTTERM LH    R2,LINECT      GET THE LINE COUNT
         LA    R2,1(R2)       IGNORE CARRIAGE CONTROL
         STH   R2,LINECT      SAVE IT BACK
         LR    R6,R1          SAVE THE ORIGINAL REG 1
         MVI   4(R1),C' '    BLANK THE CARRIAGE CONTROL
         CLI   HEADK+1,2     NOHEADING REQUEST?
         BE    PRNTTLIN       YES, JUST OUTPUT THE DATA LINE
         CH    R2,LINEMAX     NEED A NEW TITLE?
         BL    PRNTTLIN       NO, KEEP GOING
         VTOCMSG PRNTTITH     YES, PUT IT OUT
         MVC   LINECT,H2      RESET THE LINE COUNT
PRNTTLIN VTOCMSG 0(R6)        OUTPUT THE PASSED LINE
PRNTLRET LM    R1,R8,PRTLSAVE RESTORE THE REGISTERS
         BR    R8             THEN RETURN
         EJECT
PRTINIT  MVI   FIRSTIM,10    FLAG THE INITIALIZATION AS DONE
         LA    R1,TABTITL    POINT TO THE BUG TABLE
         ST    R1,ATABTITL   LET CHECK KNOW WHERE IT IS
*
*        SET UP THE CHARACTERS FOR TYPE OF SPACE ALLOC.
*
         LH    R2,SPACEK      GET THE SPACE TYPE KEYWORD
         SLA   R2,3           MULTIPLY BY 8
         LA    R2,TABSPACE(R2)  RELOCATE IT
         MVC   SPACTYPE,0(R2) SAVE THE CHARACTERS
         CLI   PRINTK+1,2     IS THIS NOPRINT?
         BE    NOOPEN         YES, SKIP THE OPEN
         MVC   SYSOUT(SYSOUTL),SYSOUTC  INITIALIZE THE DCB
         MVI   OPENLIST,X'80' TERMINATE THE LIST
         LA    R1,JFCB       POINT TO THE JFCB
         ST    R1,DCBEXIT    AND PUT THE ADDR IN THE DCB EXIT
         MVI   DCBEXIT,X'87' NOTE IT AS A JFCB EXIT
         LA    R1,DCBEXIT    POINT TO THE EXIT LIST
         LA    R2,SYSOUT     AND TO THE DCB FOR ADDRESSABILITY
         USING IHADCB,R2     TELL THE ASSEMBLER ABOUT IT
         STCM  R1,B'0111',DCBEXLSA  STUFF IT INTO THE DCB
         TM    CHARSPL+6,X'80'  CHARS PER LINE ENTERED?
         BZ    RDJFCB        NO, CONTINUE ALONG
         LA    R1,CHARSPL    YES, POINT TO THE PDL
         BAL   R8,PDLNUM     CONVERT TO A NUMBER
         STH   R15,DCBLRECL  SAVE THE NEW LRECL
         STH   R15,LINELEN   ALSO THE LINE LENGTH
         TM    BLKSZSET+6,X'80'  BLOCKSIZE ENTERED?
         BZ    BLKEQREC      NO, BLOCKSIZE EQUALS LRECL
         LA    R1,BLKSZSET      POINT TO THE PDL
         BAL   R8,PDLNUM     GET THE NUMBER
BLKEQREC STH   R15,DCBPRECL  STUFF IT AWAY
         DROP  R2            FINISHED WITH THE DCB
RDJFCB   RDJFCB ((R2)),MF=(E,OPENLIST)  SEE IF IT'S THERE
         LTR   R15,R15       WAS IT THERE?
         BNZ   NOOPEN        NO, SKIP ALONG
         OPEN  ((R2),OUTPUT),MF=(E,OPENLIST)  OPEN THE PRINT DCB
*
*        INITIALIZE PRINT VARIABLES
*
*        SET LINES/PAGE AND LINESIZE
*
NOOPEN   MVC   LINEMAX,DEFLMAX  SET THE DEFAULT NUMBER OF LINES/PAGE
         TM    LINESPP+6,X'80'     LINES PER PAGE ENTERED?
         BZ    DEFLINPP     NO, SKIP ON
         LA    R1,LINESPP    YES, POINT TO THE PDL
         BAL   R8,PDLNUM     CONVERT TO A NUMBER
         STH   R15,LINEMAX   AND SAVE IT
DEFLINPP MVC   LINECT,LINEMAX SET UP TO PAGE ON THE FIRST WRITE
         TM    CHARSPL+6,X'80'     CHARS PER LINE ENTERED?
         BO    LENSET        YES, USE IT
         MVC   LINELEN,DEFLEN SET UP A DEFAULT LENGTH
         TM    SYSOUT+48,X'10' DO WE USE SYSOUT?
         BO    LENSET         YES, USE WHAT WE'VE GOT
*        GET THE TERMINAL LINE SIZE TO SEE IF IT MAKES SENSE
         GTSIZE
         LTR   R1,R1          SEE IF IT'S GOOD
         BZ    LENSET         NO, JUST A ZERO, KEEP THE DEFAULTS
         BCTR  R1,0           CUT IT DOWN ONE TO AVOID A MESS
         STH   R1,LINELEN     SAVE THIS LENGTH
         LTR   R0,R0          FOR DISPLAYS, IT'S SCREEN SIZE
         BZ    LENSET         KEEP WHAT WE'VE GOT
         TM    LINESPP+6,X'80'  WAS LINES PER PAGE ENTERED?
         BO    LENSET           YES, DON'T OVERRIDE IT
         STH   R0,LINEMAX     AND SAVE THE NEW PAGE LOCATION
LENSET   DS    0H
*
*        SET UP THE PAGE COUNTER
*
PAGEAD   LH    R1,LINELEN     GET THE LENGTH OF THE LINE
         SH    R1,H10         MINUS TEN CHARACTERS
         LA    R1,PRNTHEAD(R1) THEN RELOCATE IT
         CLEAR PRNTHEAD       CLEAR THE LINE FIRST
         MVC   0(4,R1),CPAGE  MOVE IN THE CHARACTERS PAGE
         LA    R1,5(R1)       MOVE OVER 5 MORE
         ST    R1,PAGEADDR    THIS IS THE PLACE
*
*        BUILD THE PRINT HEADER LINE
*
         TM    HEADING+6,X'80' IS A USER HEADING PRESENT
         BO    USERHEAD       YES, USE IT
         MVC   PRNTHEAD(L'DEFHEAD),DEFHEAD  NO, GET A DEFAULT
*
*        ADD THE COMMAND BUFFER TO THE HEADING
*
         LH    R1,LINELEN    GET THE LINE LENGTHE
         SH    R1,H32        MINUS SPACES FOR PAGE, START OF HDR
         BNP   OUTOPEN       IF IT'S SHORT, SKIP ON
         L     R14,ADDRCBUF  POINT TO THE COMMAND BUFFER
         CH    R1,0(R14)     COMPARE LENGTHS
         BL    CBUFBIG       THE COMMAND BUFFER TOO BIG
         LH    R1,0(R14)     GET THE COMMAND BUFFER SIZE
CBUFBIG  SH    R1,H5         MINUS 1 FOR EX, 4 FOR CBUF PREFIX
         EX    R1,MOVEHED    MOVE THE CBUF TO THE DEFAULT HEADER
         B     OUTOPEN        GO SET UP THE PAGE COUNTER
USERHEAD LH    R1,HEADING+4   GET THE LENGTH
         BCTR  R1,0           MINUS ONE FOR THE EX
         L     R2,HEADING     POINT TO THE USER HEAD
         EX    R1,MOVEHEAD    THEN MOVE IT IN
OUTOPEN  DS    0H
*
*        SET UP THE WORK LINE
*
         LH    R1,LINELEN    GET THE LINE LENGTH
         LA    R1,4(R1)      ADD FOUR FOR THE PREFIX
         STH   R1,WORKLINE   OUTPUT TEXT
         STH   R1,PRNTTITH    ITEM TITLES
*        GET THE PRINT SPECIFICATION
*
         LA    R1,DEFPRNT
         ST    R1,VTPRNTLS   SAVE THE PRINT ITEM LIST ADDRESS
         TM    SUBPRTKY+6,X'80'  WERE ANY ITEMS SET UP
         BE    PRTITSET      NO, THE DEFAULT LIST IS OK
*
*        GET THE ADD, REPLACE, DELETE, AND NEW ITEMS
*        AND BUILD THE NEW LIST
*
*        FIRST CONVERT THE ENTERED TEXT INTO NUMERIC KEYS
*
         LA    R4,SUBPRTIT   POINT TO THE ITEMS
         LA    R5,VTPRNTEN   POINT TO THE OUTPUT KEYS
         LA    R0,VTPRNTEX   POINT TO THE END OF THE LIST
ENTKEY   BAL   R8,GETKEY     GET A KEY
         STC   R15,0(R5)     SAVE IT
         LA    R5,1(R5)      GET TO THE NEXT ONE
         CR    R0,R5         CHECK FOR THE END
         BNH   ENTKEND       IF THAT'S ALL
         ICM   R4,7,9(R4)    GET THE CHAIN POINTER
         BNZ   ENTKEY        AND KEEP GOING IF THERE'S MORE
ENTKEND  DS    0H            THE KEYS ARE ENTERED INTO THE LIST
*
*        MERGE THE ENTERED ITEMS AND THE DEFAULT LIST INTO A NEW LIST
*
         LA    R6,VTPRNTL    POINT TO THE NEW LIST
         ST    R6,VTPRNTLS   SAVE IT'S ADDRESS
         LA    R4,VTPRNTEN   POINT TO THE ENTERED ITEMS
         LA    R2,DEFPRNT    POINT TO THE DEFAULT LIST
         LR    R3,R2         POINT TO THE BEGINNING - NO DEFAULT IF NEW
         L     R1,SUBPRTKY   POINT TO THE KEYWORD
         CLI   0(R1),C'N'    IS THIS A NEW LIST?
         BE    PRTINEW       YES, SKIP PAST DEFAULT COPY
         LA    R3,DEFPRNTE   POINT TO THE END OF THE DEFAULT LIST
*
*        ADD, REPLACE, DELETE - COPY THE DEFAULT LIST
*
PRTICOPY CR    R2,R3         IS THIS THE END OF THE DEFAULT LIST?
         BNL   PRTITSET      YES, END OF PROCESSING FOR PRINT ITEMS
*
*        CHECK FOR ENTERED ITEMS THAT ARE ALSO
*              IN THE DEFAULT LIST.
*
PRTICDLP CLC   0(1,R2),0(R4) IS THIS THE SAME ITEM
         BE    PRTIFND       YES, SEE WHAT TO DO
         LA    R4,1(R4)      NO, GET TO THE NEXT ITEM
         CLI   0(R4),0       WAS THIS THE LAST ENTERED ITEM?
         BNE   PRTICDLP      NO, KEEP LOOKING
         LA    R4,VTPRNTEN   POINT BACK TO THE TOP OF THE LIST
*
*        ADD THIS ITEM TO THE NEW LIST
*
PRTICSKP MVC   0(1,R6),0(R2) MOVE IN THE NEW KEY
         LA    R6,1(R6)      POINT PAST IT
PRTICDEL LA    R2,1(R2)      GO DOWN THE DEFAULT LIST
         B     PRTICOPY      THEN KEEP ON CHECKING
*
*        AN ITEM WAS ENTERED AND WAS IN THE DEFAULT LIST
*        FOR DELETE, JUST DELETE ITEMS
*        FOR ADD AND REPLACE, DELETE ALL BUT THE FIRST ITEM
*              TO AVOID DUPLICATES
*              IF IT IS THE FIRST ITEM, INSERT THE ENTERED LIST
*
PRTIFND  LA    R0,VTPRNTEN   POINT TO THE FIRST ITEM
         CR    R0,R4         COMPARE WITH THE ITEM FOUND
         BH    PRTICDEL      NOT THE FIRST ITEM, DELETE IT
         CLI   0(R1),C'D'    IS THIS DELETE TIME?
         BE    PRTICDEL      THEN JUST DELETE IT
         CLI   0(R1),C'R'    IS THIS A REPLACE?
         BE    PRTIREPA      YES, IGNORE THIS DEFAULT ITEM
*
*        ADD THE DEFAULT ITEM FIRST
*
PRTIASKP MVC   0(1,R6),0(R2) MOVE IN THE NEW KEY
         LA    R6,1(R6)      POINT PAST IT
*
*        MOVE THE ITEMS IN FROM THE ADD OR REPLACE LIST
*
PRTIREPA LA    R2,1(R2)      GET PAST THE DEFAULT LIST ITEM
PRTIREP  LA    R4,1(R4)      GET PAST THE FIRST ENTRY
PRTINEXT CLI   0(R4),0       IS THIS THE LAST ITEM?
         BE    PRTICOPY      YES, SEE ABOUT MORE DEFAULTS
*
*        ADD AN ENTERED ITEM TO THE LIST
*
PRTINSKP MVC   0(1,R6),0(R4) MOVE IN THE NEW KEY
         LA    R6,1(R6)      POINT PAST IT
         B     PRTIREP       GO GET MORE ENTERED ITEMS
*
*        NEW LIST, JUST USE IT AS ENTERED
*
PRTINEW  LA    R1,VTPRNTEN   POINT TO THE ENTERED LIST
         ST    R1,VTPRNTLS   THEN SAVE ITS ADDRESS FOR LATER
PRTITSET DS    0H
*
*        BUILD THE TITLE LINE FOR THE DSNAME FIELDS
*
         CLEAR PRNTTITL        BLANK OUT THE TITLE LINE
         MVC   PRNTTITL+1(139),PRNTTITL  SO THE WHOLE THING IS GOOD
         L     R2,VTPRNTLS   GET THE PRINT ITEM LIST
         LA    R1,PRNTTITL    POINT TO THE TITLE LINE
TITLOOP  SR    R6,R6          GET THE RESERVED WORD NUMBER
         IC    R6,0(R2)       FROM THE TOP BYTE
         MH    R6,H12         MULTIPLY BY 12 FOR THE TABLE ENTRIES
         LA    R6,TABTITL(R6) THEN RELOCATE THE MESS
         SR    R7,R7          CLEAR A REGISTER
         IC    R7,0(R6)       GET THE EXECUTE LENGTH
         EX    R7,MOVETIT     MOVE IN THE TITLE
         LA    R1,1(R1,R7)    MOVE THE POINTER OVER
         CLI   0(R2),DSNAME  IS THIS THE DSNAME KEY
         BE    TITDSN        YES, SPECIAL PROCESSING
         LA    R0,PRNTTITL    POINT TO THE BEGINNING AGAIN
         SR    R1,R0          AND FIND THE CURRENT LENGTH
         CH    R1,LINELEN     IS IT TOO LONG?
         BNL   TITOVER        YES, PULL BACK
         AR    R1,R0          NO, KEEP GOING
TITINC   LA    R2,1(R2)            GET THE NEXT CHAIN POINTER
         CLI   0(R2),0       ARE WE DONE?
         BNE   TITLOOP        GO GET MORE TITLES
         B     TITEND         ALL DONE
TITDSN   LR    R6,R1         SAVE THE ADDRESS POINTER
         LA    R1,DSNPLN     POINT TO THE PDL FOR DSN LENGTH
         BAL   R8,PDLNUM     GO TRANSLATE IT
         LTR   R15,R15       WAS IT THERE?
         BP    TITDSN2       YES, USE IT
         LA    R15,44        NO, SET THE DEFAULT
TITDSN2  STH   R15,DSNLENGT  SAVE THE LENGTH
         SH    R15,H9        SUBTRACT THE 9 CHARS MOVED ALREADY
*              MINUS ONE FOR EX, PLUS ONE FOR SPACE
         MVI   0(R6),C' '    GET AN INITIAL BLANK
         EX    R15,DSNBLMOV  MOVE IN THE BLANKS
         LA    R1,1(R15,R6)  RESET THE POINTER ( INCLUDE A SPACE )
         LA    R15,1(R15)    ADD ON THE SPACE CHARACTER
         STH   R15,DSNLENOF  SAVE THE OFFSET
         B     TITINC        ALLOW DSNAME TO OVERFLOW THE LINE
*
*        TITLE RAN OFF THE END, CUT IT OFF
*
TITOVER  SR    R1,R7          SUBTRACT PAST THIS FIELD
         AR    R1,R0          RELOCATE IT
         BCTR  R1,0           THEN GET THE LAST CHARACTER
         MVC   0(9,R1),BLANKS THEN BLANK IT OUT
TITEND   TM    SYSOUT+48,X'10' IS THE DCB OPEN
         BNO   CKOUTPT       NO, TERMINAL OUTPUT, NO CC
         MVI   PRNTTITL,C'0'  ALWAYS SKIP A LINE FOR IT
CKOUTPT  CLI   OUTPUTK+1,1    OUTPUT THIS RUN?
         BNE   VTRET          YES, SKIP THE OPEN, JUST RETURN
         MVC   OUTDCB(OUTDCBL),OUTDCBC  INITIALIZE THE DCB
         MVI   OPENLIST,X'80' TERMINATE THE LIST
         OPEN  (OUTDCB,OUTPUT),MF=(E,OPENLIST)  OPEN THE DATA SET DCB
         B     VTRET          RETURN, INITIALIZATION IS DONE
         EJECT
*
*        ROUTINE TO CONVERT A TEXT DSCB ITEM
*        INTO ITS KEY NUMBER
*        INPUT IS REG 4 - IKJIDENT PTR
*        OUTPUT IS REG 15 - KEY NUMBER
*        ENTRY VIA BAL   R8,GETKEY
*
GETKEY   L     R1,ATABTITL     POINT TO THE TABLE
         LA    R1,12(R1)     POINT TO THE FIRST ENTRY
         LA    R15,1           SET UP THE KEY NUMBER COUNTER
         L     R6,0(R4)      POINT TO THE ENTERED TEXT
         ICM   R3,3,4(R4)    GET THE LENGTH OF THE ENTERED TEXT
         BNP   GETKNOTF      NOT FOUND IF ZERO
         BCTR  R3,0          MINUS ONE FOR THE EX
GETKLOOP LA    R2,4(R1)      POINT TO THE COMPARISON TEXT
         CLI   0(R2),C' '    IS IT HERE?
         BNE   GETKSTD       YES, THIS IS IT
         LA    R2,1(R2)      NO, MOVE OVER ONE MORE
         CLI   0(R2),C' '    IS IT HERE?
         BNE   GETKSTD       YES, THIS IS IT
         LA    R2,1(R2)      NO, MOVE OVER ONE MORE
GETKSTD  EX    R3,GETKCOMP   COMPARE THE KEY TEXT
         BNE   GETNFND       NOT HERE, BRANCH                   ABL-EXT
         CLC   =C'EX ',0(R6) EX (FOR EXTENTS)?                  ABL-EXT
         BNE   GETKFND       I FOUND IT                         ABL-EXT
         CLC   =C'EXP',0(R2) EXP (FOR EXPDT)?                   ABL-EXT
         BNE   GETKFND       I FOUND IT                         ABL-EXT
         SPACE 1                                                ABL-EXT
GETNFND  DS    0H                                               ABL-EXT
         LA    R1,12(R1)     GET TO THE NEXT KEY
         LA    R15,1(R15)    INCREMENT THE KEY COUNTER
         CH    R15,H26       CHECK FOR THE END OF THE TABLE
         BNH   GETKLOOP      NOT YET, KEEP LOOKING
*
*        KEY WAS NOT FOUND, SEND BACK A ZERO
*
GETKNOTF SR    R15,R15       SET UP THE ZERO AND RETURN
GETKFND  BR    R8            JUST RETURN
GETKCOMP CLC   0(0,R6),0(R2) EXECUTED TEXT COMPARE
H26      DC    H'26'
         EJECT
*
*        PROGRAM CONSTANTS
*
ZERO     DC    F'0'
F100     DC    F'100'
F127     DC    F'127'
DEFLMAX  DC    H'60'          DEFAULT LINES PER PAGE
DEFLEN   DC    H'132'         DEFAULT CHARS PER LINE
H2       DC    H'2'
H5       DC    H'5'
H9       DC    H'9'
H10      DC    H'10'
H12      DC    H'12'
H18      DC    H'18'
H32      DC    H'32'
MOVETIT  MVC   0(0,R1),3(R6)  MOVE IN THE TITLE
COMPKEY  CLC   0(0,R1),VTFDSN  EXECUTED COMPARE
MOVEHEAD MVC   PRNTHEAD(0),0(R2)
MOVEHED  MVC   PRNTHEAD+21(0),4(R14)  MOVE CMD BUF TO DEFAULT HEADER
DSNBLMOV MVC   1(0,R6),0(R6)  BLANK OUT THE DSN SPACE IN THE TITLE
CPAGE    DC    C'PAGE'
EDMASK   DC    XL16'40202020202020202020202020202120'
EDMASK0  DC    XL16'F0202020202020202020202020202120'
SKIP     DC    C'0'
COMP0    DC    CL16'0000000000000000'
BLANKS   DC    CL16'                '
STARS    DC    CL16'****************'
TABSPACE DC    CL8'KBYTES'                                LMB 1/4/83
         DC    CL8'KBYTES'                                LMB 1/4/83
         DC    CL8'MBYTES'                                LMB 1/4/83
         DC    CL8'TRKS  '                                LMB 1/4/83
         DC    CL8'CYLS  '                                LMB 1/4/83
*
         PRINT NOGEN
SYSOUTC  DCB   DSORG=PS,DDNAME=VTOCOUT,MACRF=PM,                       X
               RECFM=FBA,LRECL=150,BLKSIZE=1500
OUTDCBC  DCB   DSORG=PS,DDNAME=OUTPUT,MACRF=PM,                        X
               RECFM=FB,LRECL=100,BLKSIZE=6000
*
*        PROGRAM MESSAGES
*
         SPACE 2
         SPACE
MSGTOTC  MSG   '  TOTALS -  NNNN DATA SETS, MMMMMMMM UUUUUU ALLOC, LLLLX
               LLLL UUUUUU USED '
MSGTLEN  EQU   *-MSGTOTC
MSGBLC   MSG   '                '
*
DEFHEAD  DC    CL20'1 VTOC COMMAND  V-77'
*
*        DEFAULT PRINT LIST
*
DEFPRNT  DC    AL1(ALLOC)
         DC    AL1(UNUSED)
         DC    AL1(PCT)
         DC    AL1(EXT)
         DC    AL1(DSORG)
         DC    AL1(RECFM)
         DC    AL1(LRECL)
         DC    AL1(BLKSZ)
         DC    AL1(CDATE)
         DC    AL1(LSTUS)
         DC    AL1(VOLUME)
         DC    AL1(DSNAME)
         DC    AL1(EXPDT)
         DC    AL1(SECQ)
         DC    AL1(SECT)
         DC    AL1(ROUND)
         DC    AL1(PASS)
         DC    AL1(ACTION)
         DC    AL1(TYPE)
         DC    AL1(RACF)
         DC    AL1(0)        END OF THE LIST
DEFPRNTE EQU   *
DEFPRNTL EQU   *-DEFPRNT
*
*        TABLE OF PRINT ITEM LENGTHS AND TITLES
*
*        ENTRIES IN THE TABLE FOR EACH FORMATTED ITEM -
*        FIRST BYTE IS FIELD LENGTH FOR OUTPUT ( MINUS ONE FOR EX )
*        SECOND BYTE - X'80' BIT INDICATES A CHARACTER FIELD
*                            THEN BITS 0-7 GIVE VTFMT LENGTH
*                      OTHERWISE IT'S A KEY TO WHICH ROUTINE TO USE
*        THIRD BYTE - OFFSET IN FORMATTED DSCB, VTFMT
*        4-12 TH BYTES, THE TITLE FOR THE FIELD
*
*
TABTITL  DC    XL12'00'  DUMMY ENTRY FOR 0 ADDRESSING
         DC    AL1(8),AL1(128+7),AL1(VTFACTON-VTFMT),CL9' ACTION  '  1
         DC    AL1(6),AL1(128+5),AL1(VTFVOLUM-VTFMT),CL9' VOLUME  '  2
         DC    AL1(5),AL1(000+4),AL1(VTFCREDT-VTFMT),CL9' CDATE   '  3
         DC    AL1(5),AL1(000+4),AL1(VTFLSTAC-VTFMT),CL9' REFDT   '  4
         DC    AL1(5),AL1(000+4),AL1(VTFEXPDT-VTFMT),CL9' EXPDT   '  5
         DC    AL1(6),AL1(00+12),AL1(VTFALLOC-VTFMT),CL9'  ALLOC  '  6
         DC    AL1(6),AL1(00+16),AL1(VTFALLOC-VTFMT),CL9' UNUSED  '  7
         DC    AL1(3),AL1(00+20),AL1(VTFALLOC-VTFMT),CL9' PCT     '  8
         DC    AL1(2),AL1(00+24),AL1(VTFNOEPV-VTFMT),CL9' EX      '  9
         DC    AL1(3),AL1(128+2),AL1(VTFDSORG-VTFMT),CL9' DSO     ' 10
         DC    AL1(3),AL1(128+3),AL1(VTFRECFM-VTFMT),CL9' RFM     ' 11
         DC    AL1(5),AL1(00+28),AL1(VTFBLKSZ-VTFMT),CL9' BLKSZ   ' 12
         DC    AL1(5),AL1(00+28),AL1(VTFLRECL-VTFMT),CL9' LRECL   ' 13
         DC    AL1(4),AL1(128+0),AL01(VTFPROT-VTFMT),CL9' PASS    ' 14
         DC    AL1(3),AL1(128+0),AL1(VTFCATLG-VTFMT),CL9' CAT     ' 15
         DC    AL1(4),AL1(128+0),AL1(VTFSECAL-VTFMT),CL9' SECT    ' 16
         DC    AL1(5),AL1(00+28),AL1(VTFSECAM-VTFMT),CL9'  SECQ   ' 17
         DC    AL1(4),AL1(00+36),AL1(VTFVOLUM-VTFMT),CL9' UNIT    ' 18
         DC    AL1(5),AL1(128+0),AL1(VTFROUND-VTFMT),CL9' ROUND   ' 19
         DC    AL1(4),AL1(128+0),AL1(VTFDSTYP-VTFMT),CL9' TYPE    ' 20
         DC    AL1(6),AL1(00+12),AL01(VTFUSED-VTFMT),CL9'   USED  ' 21
         DC    AL1(8),AL1(00+32),AL1(VTFVOLUM-VTFMT),CL9'   CCHH  ' 22
         DC    AL1(3),AL1(128+0),AL1(VTFUPD-VTFMT),CL9' UPD     '   23
         DC    AL1(4),AL1(128+0),AL1(VTFRACF-VTFMT),CL9' RACF    '  24
         DC    AL1(6),AL1(128+0),AL1(VTFVOLUM-VTFMT),CL9' DUMMY5  ' 25
         DC    AL1(8),AL1(00+32),AL001(VTFDSN-VTFMT),CL9' DSNAME  ' 26
         EJECT
*
*
*        P A R S E   C O N T R O L   L I S T
*
*
         PRINT OFF
         COPY  VTOCPARS
         PRINT ON
*
*        DYNAMIC WORK AREA
*
         SPACE 3
PRNTWORK DSECT
         DS    18A            PRINT ROUTINE SAVE AREA
TOTDS    DS    F              TOTAL COUNTER
TOTALLOC DS    F              TOTAL ALLOCATION
TOTUSED  DS    F              TOTAL USED
FTOTDS   DS    F              FINAL TOTAL DATA SETS
FTOTALLC DS    F              FINAL TOTAL ALLOC
FTOTUSED DS    F              FINAL TOTAL USED
PRNTLSAV DS    A
PRINTR8  DS    A
PRNTTOT8 DS    A
ADDREND  DS    A
PAGEADDR DS    A
OPENLIST DS    2A             PARM LIST FOR OPEN
PDLNSAVE DS    8A             REGISTER SAVE AREA FOR PDLNUM RTN
PRTLSAVE DS    8A             REGISTER SAVE AREA FOR PRNTLINE RTN
LASTKEY  DS    A              ADDRESS OF LAST KEY FOR SUBTOTALS, BREAKS
NUMBREAK DS    H              CHARACTERS TO COMPARE FOR BREAK
NUMTOTAL DS    H              CHARACTERS TO COMPARE FOR SUBTOTALS
         PRINT NOGEN
SYSOUT   DCB   DSORG=PS,DDNAME=VTOCOUT,MACRF=PM,                       X
               RECFM=FBA,LRECL=150,BLKSIZE=1500
SYSOUTL  EQU   *-SYSOUT
OUTDCB   DCB   DSORG=PS,DDNAME=OUTPUT,MACRF=PM,                        X
               RECFM=FB,LRECL=100,BLKSIZE=6000
OUTDCBL  EQU   *-OUTDCB
ENDTOTAL DS    X              PROGRAM SWITCHES
ENTOTOUT EQU   X'80'          THE FINAL TOTALS HAVE BEEN OUTPUT
ENDTONLY EQU   X'10'          NO SUBTOTALS, END TOTALS ONLY
NOBREAK  EQU   X'08'          NO BREAKS
FIRSTIM  DS    X              INITIALIZATION FOR THIS ROUTINE
PDLMINUS DC    X'00'
TOTLAST  DS    X
SPACTYPE DS    CL6          CHARACTERS FOR SPACE UNITS
DSNLENGT DS    H
DSNLENOF DS    H
CHARS    DS    CL16           CONVERSION TO CHARACTERS
MSGWORK  DS    CL256          AREA FOR BUILDING MESSAGES
WORKLINE DS    CL256          AREA FOR DATA SET
PRNTHDRH DS    F
PRNTHEAD DS    CL256          AREA FOR HEADER
PRNTTITH DS    F
PRNTTITL DS    CL256          AREA FOR ITEM TITLES
MSGBL    DS    CL20           AREA FOR BLANK LINE
OUTWORK  DS    CL256          WORKING AREA FOR OUTPUT
DCBEXIT  DS    F
JFCB     DS    XL176
         SPACE
VTPRNTLS DS    A             PRINT ITEM LIST ADDRESS
VTPRNTL  DS    40C           PRINT ITEM LIST ( IF MODIFIED )
VTPRNTEN DS    40C
VTPRNTEX DS    C
         SPACE
         DS    0D
LENWORK  EQU   *-PRNTWORK
*
*        VTOC COMMAND COMMON AREA
*
         PRINT NOGEN
         VTOCOM
         SPACE 3
*
*        FORMATTED DSCB
*
         VTFMT
         SPACE 3
         PDEDSNAM
         SPACE 3
DUMMD    DSECT
DUMMA    DS    C              DUMMY ENTRY TO USE FOR CONV
         PRINT NOGEN
         DCBD  DSORG=PS,DEVD=DA
         END

VTOCEXCP TITLE 'VTOCEXCP- VTOC READING SUBROUTINE'
***********************************************************************
*        SPACE
* AUTHOR;  R. F. MORSE, MIT INSTRUMENTATION LABORATORY  AUG 5,1968.
* MODIFIED;   E.BANK, FIREMAN'S FUND  MAY 15,1975.
* MODIFIED;   R.MILLER  FIREMAN'S FUND  MAR 20,1977.
* FUNCTION; THIS SUBROUTINE READS THE VOLUME TABLE OF CONTENTS (VTOC)
*        FROM A DIRECT-ACCESS DEVICE AND PRESENTS IT TO THE CALLER
*        ONE RECORD (DSCB) AT A TIME.
*
* OPERATION; THIS ROUTINE IS A SPECIALIZED SEQUENTIAL ACCESS METHOD
*        FOR VTOC'S.  ITS ADVANTAGE OVER ORDINARY BSAM IS THAT IT READS
*        AN ENTIRE TRACK IN ONE REVOLUTION, THUS SAVING CONSIDERABLE
*        TIME.  THE ROUTINE HAS THREE CALL MODES;
*
*        0 - READ.  RETURNS WITH THE CORE ADDRESS OF A DSCB IN THE 3RD
*              PARAMETER.  THE CORE CONSISTS OF 148 CONSECUTIVE BYTES,
*              CONTAINING THE COUNT (8 BYTES), KEY (44 BYTES), AND DATA
*              (96 BYTES) FOR ONE DSCB.  RETURN CODES (REGISTER 15)
*              ARE;
*                      0 - NORMAL;
*                      4 - END OF FILE, NO DATA PRESENTED;
*                      8 - PERMANENT I/O ERROR.  THE KEY AND DATA AREAS
*                          WILL BE SET TO ZEROS; THE COUNT AREA WILL
*                          CONTAIN THE CORRECT CCHHR.  SINCE READING
*                          IS DONE A TRACK AT A TIME, ALL THE DSCB'S
*                          FOR THAT TRACK WILL BE MARKED IN ERROR.
*                          READING MAY CONTINUE ON TO THE NEXT TRACK.
*
*        1 - OPEN.  THE SECOND PARAMETER SHOULD POINT TO
*              A  6-BYTE FIELD CONTAINING THE VOLSER TO BE USED FOR THE
*              ALLOCATION.
*              RETURN CODES ( REG 15 )  ARE DIRECT FROM DYNAMIC ALLOC.
*                      0 - NORMAL;
*                      4 - UNABLE TO OPEN (PROBABLY MISSING DD CARD);
*                      8 - DD CARD DID NOT REFER TO A DIRECT-ACCESS
*                          DEVICE, OR DEVICE TYPE UNKNOWN.
*
*        2 - CLOSE.  NO ARGUMENTS ARE REQUIRED OR RETURNED.  RETURN
*              CODE ( REG 15 ) IS FROM DYNAMIC UNALLOCATION.
         SPACE
* ENTRY POINTS:  ENTRY IS ALWAYS TO 'VTOCEXCP'.
*        ARGUMENTS ARE:
*                      1 - A(FULL-WORD BINARY ENTRY TYPE);
*                      2 - A(PTR FOR DSCB);
*                      3 - A(VOLSER).
* DATA SETS:  READS VOLUME TABLE OF CONTENTS FROM ANY DIRECT-ACCESS
*        DEVICE.  USES EXCP TO EXECUTE A CHAINED CHANNEL PROGRAM TO
*        READ AN ENTIRE TRACK AT A TIME.
*
* EXTERNAL ROUTINES:  USES SUPERVISOR ROUTINE 'IECPCNVT' TO CONVERT
*        A RELATIVE TRACK NUMBER TO AN ABSOLUTE ADDRESS.
         SPACE
* EXITS - NORMAL;  RETURNS TO CALLER VIA R14 WITH RETURN
*        CODE IN REGISTER 15.       (SEE ABOVE FOR RETURN CODE VALUES.)
*
* TABLES AND WORK AREAS;  USES AN AREA PROVIDED BY THE CALLER FOR
*        ITS SAVEAREA AND FOR WORKING STORAGE IMMEDIATELY FOLLOWING
*        THE PRIOR SAVEAREA.  IT USES GETMAIN TO OBTAIN AN AREA FOR
*        THE DSCB'S TO BE READ INTO.  THIS COULD BE AS LARGE AS
*        8K FOR 3350'S.  IT IS FREED BY THE FINAL CALL.
*
* ATTRIBUTES;  REENTRANT, REFRESHABLE.
         EJECT
* ENTER HERE AND PERFORM STANDARD REGISTER SAVE AREA HOUSEKEEPING.
         SPACE
VTOCEXCP ENTER 12,8                    USE THE PROVIDED SAVEAREA
         USING VTOCWORK,R13   SET ADDRESSABILITY FOR WORK AREA
         LR    R11,R1                  SAVE PARAMETER REGISTER
         USING VTOCOM,R11              SET ADDRESSABILITY
*
*        POINT TO THE DCB FOR LATER REFERENCES
*
         LA    RDCB,VTOCDCB   POINT TO IT
         USING IHADCB,RDCB    SET ADDRESSABILITY
         SPACE
* SELECT MODE FROM CONTENTS AT ADDRESS IN REGISTER 1.
         SPACE
         SR    RWA,RWA                 CLEAR THE REGISTER
         IC    RWA,VTCEFUNC            GET CALL MODE
         SLL   RWA,2                   MODE TIMES 4
         B     *+4(RWA)                BRANCH ON MODE
         SPACE
         B     GETDSB                  MODE 0, GET A DSCB
         B     OPEN                    MODE 1, OPEN A NEW VTOC
         B     CLOSE                   MODE 2, CLOSE
         B     RETURN0                 MODE 3 NOT DEFINED, NO OP
         SPACE 3
***********
* RETURNS *
***********
         SPACE
RETURN0  SR    R15,R15                 CLEAR THE RETURN CODE
RETURN   LEAVE EQ                      EXIT WITH THE CURRENT RET CODE
         EJECT
*********************
* MODE 0 - GET DSCB *
*********************
         SPACE
* IF END-OF-FILE WAS REACHED, RETURN AT ONCE.
         SPACE
GETDSB   LA    R15,4                   SET THE RETURN CODE, IN CASE
         TM    MODESW,EOFSW            TEST END-OF-FILE BIT
         BO    RETURN                  RETURN CODE 4 IF ON
         SPACE
* IF CHANNEL PROGRAM HAS BEEN STARTED, GO TO CHECK IT.  OTHERWISE,
* ASSUME THERE IS AT LEAST ONE FULL BUFFER.
         SPACE
         TM    MODESW,XCPRUN           TEST IF EXCP ISSUED
         BO    XCPTEST                 BRANCH IF SO
         SPACE
* SET BUFFER ADDRESS TO NEXT DSCB AND TEST IF LAST ON TRACK.  IF NOT,
* EXIT WITH ITS ADDRESS IN R1.
         SPACE
         L     RWA,DSCBADR             LOAD BUFFER POINTER
         LA    RWA,148(RWA)            ADVANCE TO NEXT DSCB
NDXSTORE ST    RWA,DSCBADR             STORE UPDATED POINTER
         C     RWA,DSCBLIM             TEST IF LAST DSCB IN BUFFER
         BNL   LASTDSCB                BRANCH IF SO
         LR    R1,RWA                  PASS ADDRESS TO USER
GETOUT   ST    R1,DSCBADDR             STORE IT FOR THE CALLER
         TM    MODESW,RDERR            TEST IF ERROR ON THIS TRACK
         BZ    RETURN0                 RETURN CODE 0 IF NOT
         LA    R15,8                   SET THE RETURN CODE
         B     RETURN                  RETURN CODE 8 IF ERROR
         SPACE
* IF THIS IS THE LAST DSCB, MOVE IT TO THE INTERNAL BUFFER AND START
* READING THE NEXT TRACK.
         SPACE
LASTDSCB MVC   BUFF(148),0(RWA)        MOVE LAST DSCB
         L     RWB,TTRN                LOAD RELATIVE TRACK NUMBER
         AL    RWB,=X'00010000'        INCREMENT TO NEXT TRACK
         ST    RWB,TTRN
         BAL   RRET,EXCP               START CHANNEL PROGRAM
         LA    R1,BUFF                 LOAD DSCB ADDRESS FOR CALLER
         B     GETOUT                  TO RETURN
         EJECT
* WAIT FOR CHANNEL PROGRAM COMPLETION AND TEST THE OUTCOME.
         SPACE
XCPTEST  WAIT  ECB=VTOCECB
         SPACE
         NI    MODESW,X'FF'-XCPRUN     TURN EXCP STARTED BIT OFF
         CLI   VTOCECB,X'7F'           TEST COMPLETION CODE
         BNE   PERMERR                 BRANCH IF ERROR
SETDSCBA L     RWA,DSCBSTRT            SET BUFFER POINTER TO 1ST DSCB
         B     NDXSTORE
         SPACE
* PERMANENT ERROR FOR THIS TRACK.  ZERO THE DSCB'S AND FILL IN THE
* CCHHR PORTIONS OF THE COUNT AREAS.
         SPACE
PERMERR  OI    MODESW,RDERR            SIGNAL READ ERROR
         NI    IOBFLAG1,X'FB'          TURN OFF BIT 5 OF IOB FLAG
         NI    DCBIFLGS,X'3F'          TURN OFF BITS 0 AND 1
         L     RWA,DSCBSTRT            LOAD ADDRESS OF FIRST DSCB
         LA    RWB,1                   LOAD RECORD NUMBER
         SPACE
DSCBELUP XC    0(148,RWA),0(RWA)       ZERO DSCB BUFFER
         MVC   0(4,RWA),IOBSEEK+3      INSERT CCHH IN COUNT FIELD
         STC   RWB,4(RWA)              INSERT R IN COUNT FIELD
         LA    RWA,148(RWA)            POINT TO NEXT BUFFER
         LA    RWB,1(RWB)              INCREMENT RECORD NUMBER
         C     RWA,DSCBLIM             TEST FOR LAST BUFFER
         BNH   DSCBELUP
         VTOCMSG TRACKERR       ISSUE THE ERROR MESSAGE
         B     SETDSCBA                BRANCH TO RESET BUFFER POINTER
         EJECT
*****************
* MODE 1 - OPEN *
*****************
         SPACE
* ENTER WITH A DDNAME IN SECOND PARAMETER POSITION.  PERFORM CLOSE
* SUBROUTINE FIRST TO BE SURE EVERYTHING IS INITIALIZED.
         SPACE
OPEN     DS    0H
         BAL   RRET,CLOSESUB           CALL CLOSE SUBROUTINE
         SPACE
*
*        INITIALIZE THE DATA AREAS
*
*        FIRST THE DCB
         MVC   VTOCDCB(DCBLEN),VTOCDCBM  SET UP THE DCB
*
*        SET UP THE JFCB LISTS
*
         LA    R1,JEXLST      POINT TO THE EXIT LIST
         STCM  R1,B'0111',DCBEXLSA  PUT IT INTO THE DCB
         LA    R1,JFCBAREA    POINT TO THE JFCB AREA
         ST    R1,JEXLST      AND PUT THAT INTO THE EXIT LIST
         MVI   JEXLST,X'87'   END OF LIST, JFCB EXIT
         MVI   OPENLIST,X'80' END OF THE OPEN LIST TOO
*        INITIALIZE THE IOB
         MVC   VTOCIOB(IOBCONL),IOBCONST START IT OUT
         LA    R1,VTOCECB     GET THE ECB ADDRESS
         ST    R1,IOBECB      AND STORE IT INTO THE IOB
         ST    RDCB,IOBDCB    STORE THE DCB ADDRESS INTO THE IOB
*        INITIALIZE THE CAMLST
         MVC   DSCBFMT4(4),DSCBCON SET UP THE FIRST WORD
         LA    R1,IOBSEEK+3   SEEK ADDRESS
         ST    R1,DSCBFMT4+4  INTO THE CAMLST
         LA    R1,VOLID       VOLUME SERIAL NUMBER
         ST    R1,DSCBFMT4+8  INTO THE CAMLST
         LA    R1,FMT4        DSCB AREA
         ST    R1,DSCBFMT4+12 INTO THE CAMLST
*
*        ALLOCATE THE VTOC OF THE CHOSEN PACK
*
         LA    R1,ADDR        POINT TO THE UNIT ADDRESS
         ST    R1,UNITADDR    SAVE THE ADDRESS
         LA    R1,3           ALSO GET THE LENGTH
         STH   R1,UNITLEN     AND SAVE IT FOR DYNAMIC ALLOCATION MACRO
         LA    R1,VOLID       POINT TO THE VOLUME SERIAL
         ST    R1,VOLADDR     SAVE THE ADDRESS
         LA    R1,6           ALSO GET THE LENGTH
         STH   R1,VOLLEN      AND SAVE IT FOR DYNAMIC ALLOCATION MACRO
         ALLOC DSN=VTOCNM,VOL=VOLADDR,UNIT=UNITADDR,DISP=SHR,          X
               DDNTO=DCBDDNAM,ERROR=S99FAIL
         OI    MODESW,ALLOCSW          SET ALLOCATE FLAG ON
         SPACE
* OPEN THE VTOC.
         SPACE
*
*        FIRST READ THE JFCB TO SWITCH THE DSNAME TO HEX 04'S
*
         RDJFCB ((RDCB)),MF=(E,OPENLIST)  READ THE JFCB
         LTR   R15,R15        TEST THE RETURN CODE
         BNZ   ERRJFCB        BAD NEWS
         LA    R1,JFCBAREA    POINT TO THE JFCB
         USING JFCB,R1        SET UP ADDRESSABILITY
         MVI   JFCBDSNM,X'04' PUT IN THE FIRST ONE
         MVC   JFCBDSNM+1(L'JFCBDSNM-1),JFCBDSNM  PROPAGATE IT
         OI    JFCBTSDM,JFCNWRIT  DON'T REWRITE IT
         DROP  R1
         OPEN  ((RDCB),(INPUT)),MF=(E,OPENLIST),TYPE=J  OPEN THE VTOC
         TM    DCBOFLGS,OPENBIT        TEST IF OPEN WORKED
         BZ    OPENERR                 ERROR IF OPEN FAILED
         SPACE
* ISSUE AN OBTAIN FOR THE FIRST DSCB ON THE VTOC ( FORMAT 4 )
D3       STM   R2,R13,EXCPSAVE         SAVE OUR REGS
         LA    R3,EXCPSAVE    POINT TO THE REGISTER SAVE AREA
         ICM   R0,B'1111',=X'00000100' FIRST DSCB
         L     R1,DCBDEBAD             DEB ADDRESS
         LA    R2,IOBSEEK              SAVE ADDRESS OF CCHHR
         L     R15,CVT                 GET ADDRESS OF CVT
         L     R15,CVTPCNVT(R15)       GET ADDRESS OF CONVERT ROUTINE
         BALR  R14,R15                 GO TO CONVERT ROUTINE
         LM    R2,R13,0(R3)            GET MY REGS BACK
         OBTAIN DSCBFMT4               GET FORMAT 4 DSCB
         LTR   R15,R15                 DID WE GET IT
         BNZ   OBTERR                  NO - THEN ERROR, KEEP R15
         CLI   DS4IDFMT,X'F4'          MAKE SURE WE HAVE FORMAT 4
         BNE   NOTFMT4                 NO - THEN ERROR
         IC    R15,DS4DEVDT            GET NUMBER OF DSCBS PER TRACK
         ST    R15,NDSCBS              SAVE THE NUMBER OF DSCBS
         OC    NDSCBS,NDSCBS           MAKE SURE NOT ZERO
         BZ    DSCBNUM0                YES - GO TELL CALLER
*
* OBTAIN CORE FOR CHANNEL PROGRAM AND DSCB BUFFERS.
         SPACE
         LA    R0,156                  CORE FOR ONE DSCB AND ITS CCW
         MH    R0,NDSCBS+2             TIMES NUMBER PER TRACK
         AH    R0,=H'15'               PLUS 1 CCW AND ROUNDING
         N     R0,=X'FFFFFFF8'         ROUND TO DOUBLE-WORD MULTIPLE
         ST    R0,CBSIZE               SAVE SIZE OF GOTTEN CORE
         GETMAIN  R,LV=(0)             GET TRACK BUFFERS
         ST    R1,CBADDR               SAVE ADDRESS OF GOTTEN CORE
         OI    MODESW,CBGOT            INDICATE CORE GOTTEN
         SPACE
* GENERATE CHANNEL PROGRAM.  IT CONSISTS OF A 'READ R0' ORDER WITH
* THE SKIP FLAG ON, FOLLOWED BY A 'READ COUNT-KEY-AND-DATA' ORDER FOR
* EACH DSCB.
         SPACE
         L     RWA,NDSCBS              NUMBER OF DSCB'S
         SLL   RWA,3                   TIMES   8
         LA    RWA,8(RWA,R1)           PLUS 8 AND BASE = 1ST BUFFER ADD
         ST    RWA,DSCBSTRT            SAVE ADDRESS OF FIRST BUFFER
         SPACE
         ST    R1,IOBSTART             ADDRESS OF CHANNEL PROGRAM
         MVC   0(8,R1),INITCCW         INSERT FIRST CCW
         LA    RWB,8(R1)               PLACE FOR NEXT CCW
         LA    RWC,1                   BUFFER COUNTER
         SPACE
CCWLOOP  MVC   0(8,RWB),READCCW        INSERT READ CCW FOR ONE DSCB
         ST    RWA,0(RWB)              SET ITS BUFFER ADDRESS
         MVI   0(RWB),READCKD          RESTORE COMMAND CODE
         C     RWC,NDSCBS              TEST BUFFER COUNTER
         BNL   LASTCCW                 BRANCH IF LAST BUFFER
         LA    RWB,8(RWB)              INCREMENT CCW ADDRESS
         LA    RWA,148(RWA)            INCREMENT BUFFER ADDRESS
         LA    RWC,1(RWC)              INCREMENT BUFFER COUNTER
         B     CCWLOOP                 DO NEXT BUFFER
         SPACE
LASTCCW  NI    4(RWB),X'FF'-CC         TURN OFF COMMAND CHAIN BIT
         ST    RWA,DSCBLIM             SAVE ADDRESS OF LAST DSCB BUFFER
         SPACE
* SET OTHER THINGS AND START PROGRAM TO FILL BUFFER.
         SPACE
         SR    R0,R0
         ST    R0,TTRN                 SET RELATIVE TRACK NUMBER TO 0
         NI    MODESW,X'FF'-XCPRUN-RDERR-EOFSW   SET FLAGS OFF
         BAL   RRET,EXCP               START CHANNEL PROGRAM
         B     RETURN0                 INDICATE SUCCESSFUL OPEN
         EJECT
******************
* MODE 2 - CLOSE *
******************
         SPACE
CLOSE    BAL   RRET,CLOSESUB           CALL CLOSED CLOSE SUBROUTINE
         B     RETURN0
         SPACE 2
* IF THE CHANNEL PROGRAM IS RUNNING, WAIT FOR IT BEFORE TAKING FURTHER
* ACTION.
         SPACE
CLOSESUB DS    0H
         TM    MODESW,XCPRUN           TEST IF CHANNEL PROGRAM RUNNING
         BZ    NOEXCP                  BRANCH IF NOT
         WAIT  ECB=VTOCECB             WAIT UNTIL COMPLETE
         NI    MODESW,X'FF'-XCPRUN     TURN RUNNING SWITCH OFF
NOEXCP   DS    0H
         SPACE
* CLOSE THE DCB.
         SPACE
         TM    DCBOFLGS,OPENBIT        TEST IF DCB OPEN
         BZ    NOCLOSE                 BRANCH IF NOT
         CLOSE ((RDCB)),MF=(E,OPENLIST)   CLOSE THE VTOC
NOCLOSE  DS    0H
         SPACE
* FREE UP THE DDNAME AND VOLUME
         SPACE
         TM    MODESW,ALLOCSW          DID WE ALLOCATE A DEVICE
         BNO   NOALLOC                 NO  - THEN NOTHING TO FREEUP
         LA    R1,DCBDDNAM   POINT TO THE DDNAME
         ST    R1,DDNPDL     SAVE IT FOR FREE
         LA    R1,8          GET THE DDNAME LENGTH
         STH   R1,DDNPDL+4   SAVE IT FOR FREE
         FREE  UNALC,DDN=DDNPDL,ERROR=S99FAIL  FREE THE DDNAME
         NI    MODESW,X'FF'-ALLOCSW    TURN OFF ALLOCATE SW
         SPACE
NOALLOC  DS    0H
         SPACE
* RELEASE CORE OBTAINED FOR DSCB BUFFERS.
         SPACE
         TM    MODESW,CBGOT            TEST IF CORE GOTTEN
         BZ    NOFREE                  BRANCH IF NOT
         LM    R0,R1,CBSIZE            LOAD SIZE AND LOCATION
         FREEMAIN  R,LV=(0),A=(1)      FREE CORE
         NI    MODESW,X'FF'-CBGOT      SET CORE GOTTEN BIT OFF
NOFREE   DS    0H
         SPACE
         NI    MODESW,X'FF'-RDERR      CLEAR ERROR SWITCH
         BR    RRET
         EJECT
****************
* EXCP ROUTINE *
****************
         SPACE
* CONVERT RELATIVE TRACK ADDRESS IN 'TTRN' TO ABSOLUTE SEEK ADDRESS IN
* 'IOBSEEK', USING SUPERVISOR CONVERSION ROUTINE.
         SPACE
EXCP     DS    0H
         STM   R2,R13,EXCPSAVE         SAVE IMPORTANT REGISTERS
         LA    R3,EXCPSAVE             SAVE REGS FOR RESTORING AFTER CL
         L     R0,TTRN                 LOAD RELATIVE TRACK NUMBER
         L     R1,DCBDEBAD             LOAD DEB ADDRESS
         LA    R2,IOBSEEK              LOAD ADDR TO RECEIVE MBBCCHHR
         L     R15,CVT                 LOAD CVT ADDRESS
         L     R15,CVTPCNVT(R15)       LOAD ADDR OF CONVERT ROUTINE
         BALR  R14,R15                 CONVERT TTRN TO MBBCCHHR
*                                      THAT CLOBBERED BASE REG
         LM    R2,R13,0(R3)            RESTORE REGISTERS
         LTR   R15,R15                 TEST IF EXTENT VIOLATED (RC=4)
         BNZ   SETEOF                  IF SO, MEANS END-OF-FILE
         CLC   DS4HPCHR,IOBSEEK+3      CHECK FOR THE LAST FMT1
         BL    SETEOF                  IF SO, PRETEND END-OF-FILE
         SPACE
* ZERO ECB AND START CHANNEL PROGRAM.
         SPACE
         SR    R0,R0
         ST    R0,VTOCECB              CLEAR ECB
         NI    MODESW,X'FF'-RDERR      RESET ERROR SWITCH
         EXCP  VTOCIOB                 START CHANNEL PROGRAM
         OI    MODESW,XCPRUN           SET 'RUNNING' FLAG
         BR    RRET
         SPACE
* WHEN EXTENT IS VIOLATED, SET END-FILE AND EXIT VIA CLOSE ROUTINE.
         SPACE
SETEOF   OI    MODESW,EOFSW            SET END-OF-FILE BIT
         B     CLOSESUB                EXIT VIA CLOSE SUBROUTINE
         EJECT
********************************
* DAIRFAIL ROUTINE             *
********************************
S99FAIL  LR    R15,RRCODE     SAVE THE RETURN CODE
         S99FAIL MF=(E,S99FLIST,S99FLEN)  ISSUE THE APPROPRIATE MSG
         LR    R15,RRCODE     RELOAD THE RETURN CODE
         B     RETURN         AND THEN EXIT
         SPACE 3
*
*        VARIOUS OTHER ERROR ROUTINES
*
OPENERR  VTOCMSG OPENERRM  ISSUE THE MESSAGE
         B     ERRET          THEN RETURN
OBTERR   VTOCMSG OBTERRM  ISSUE THE MESSAGE
         B     ERRET          THEN RETURN
NOTFMT4  VTOCMSG NOTFMT4M  ISSUE THE MESSAGE
         B     ERRET          THEN RETURN
DSCBNUM0 VTOCMSG DSCBNUMM  ISSUE THE MESSAGE
         B     ERRET          THEN RETURN
*
ERRJFCB  VTOCMSG ERRJFCBM   ERROR IN READING JFCB
*
ERRET    LA    R15,8          SET AN ERROR RETURN CODE
         B     RETURN         THEN EXIT
*
         EJECT
********************************
* CONSTANTS, VARIABLES, ETC... *
********************************
         SPACE
*        ERROR MESSAGES
*
OPENERRM MSG   ' VTOCEXCP - ERROR IN OPENING VTOC '
OBTERRM  MSG   ' VTOCEXCP - ERROR IN OBTAIN '
NOTFMT4M MSG   ' VTOCEXCP - FORMAT 4 DSCB WAS NOT FIRST'
DSCBNUMM MSG   ' VTOCEXCP - THE FORMAT 4 DSCB HAS DSCB S/TRK = 0 '
TRACKERR MSG   ' VTOCEXCP - A READ ERROR OCCURRED ON THE VTOC '
ERRJFCBM MSG   ' VTOCEXCP - A RDJFCB ERROR OCCURRED '
         SPACE
INITCCW  CCW   READR0,0,CC+SLI+SKIP,8
READCCW  CCW   READCKD,0,CC,148
         SPACE
DSCBCON  CAMLST SEEK,0,0,0   FILLED IN WITH IOBSEEK+3, VOLID, FMT4
         EJECT
* DATA CONTROL BLOCK
         PRINT   GEN
VTOCDCBM DCB   DDNAME=VTOCDD,MACRF=(E),EXLST=1
DCBLEN   EQU   *-VTOCDCBM
         SPACE
* IOB FOR CHANNEL PROGRAM
         SPACE
IOBCONST DS    0D
         DC    X'42000000'     COMMAND CHAIN, NOT RELATED
         DC    A(0)            ECB ADDRESS
         DC    2F'0'
         DC    A(0)            CHANNEL PROGRAM BEGINNING
         DC    A(0)            DCB ADDRESS
         DC    X'03000000'
         DC    F'0'
         DC    D'0'            INITIAL SEEK ADDRESS
IOBCONL  EQU   *-IOBCONST
* VTOC NAME FOR ALLOCATION
VTOCNM   DC    A(VTOCNAME)
         DC    Y(12)
VTOCNAME DC    CL12'FORMAT4.DSCB'   DATA SET NAME FOR VTOC
*
*
         LTORG
         EJECT
* SECTION DEFINITION AND REGISTER ASSIGNMENTS;
         SPACE 2
RWA      EQU   2
RWB      EQU   3
RWC      EQU   4
RDCB     EQU   8              DCB POINTER
RRCODE   EQU   10              RETURN CODE REGISTER
RRET     EQU   9               LOCAL SUBROUTINE EXIT REGISTER
         SPACE 3
* TAGS FOR CHANNEL COMMANDS AND FLAG BITS:
         SPACE
READR0   EQU   X'16'           READ RECORD 0
READCKD  EQU   X'1E'           READ COUNT, KEY, AND DATA
         SPACE
CC       EQU   X'40'           COMMAND CHAIN FLAG
SLI      EQU   X'20'           SUPPRESS LENGTH INDICATION FLAG
SKIP     EQU   X'10'           SKIP DATA TRANSFER FLAG
         SPACE 3
* COMMUNICATION VECTOR TABLE (CVT) DEFINITIONS:
         SPACE
CVT      EQU   16              LOCATION OF CVT BASE ADDRESS
CVTPCNVT EQU   28              OFFSET TO CONVERT ROUTINE ADDRESS
         EJECT
*
*        AREA USED BY VTOCREAD, PASSED VIA R13
*
VTOCWORK DSECT
         DS    18F             SAVE AREA
         SPACE
EXCPSAVE DS    18F             INTERNAL SAVE AREA
CBSIZE   DS    2F              SIZE AND LOCATION OF GOTTEN CORE
CBADDR   EQU   CBSIZE+4
NDSCBS   DS    F               NUMBER OF DSCB'S PER TRACK
DSCBSTRT DS    F               ADDRESS OF 1ST DSCB BUFFER
DSCBLIM  DS    F               ADDRESS OF LAST DSCB BUFFER
DSCBADR  DS    F               ADDRESS OF CURRENT DSCB
TTRN     DS    F               RELATIVE TRACK NUMBER
VOLADDR  DS    A               FAKE PDL FOR ALLOC MACRO - ADDRESS
VOLLEN   DS    H                       AND LENGTH OF VOLID
UNITADDR DS    A               FAKE PDL FOR ALLOC MACRO - ADDRESS
UNITLEN  DS    H                       AND LENGTH OF UNIT ADDRESS
DDNPDL   DS    2F            SPACE FOR DDNAME PDL
         SPACE
* MODE SWITCH AND BIT DEFINITIONS
         SPACE
MODESW   DC    X'00'
CBGOT    EQU   X'80'           CORE GOTTEN FOR BUFFER
XCPRUN   EQU   X'40'           CHANNEL PROGRAM STARTED BUT NOT CHECKED
RDERR    EQU   X'20'           PERMANENT I/O ERROR
EOFSW    EQU   X'10'           END-OF-FILE SENSED
ALLOCSW  EQU   X'08'           ALLOCATE VOLUME FLAG
         SPACE
VTOCDCB  DCB   DDNAME=VTOCDD,MACRF=(E),EXLST=1
         SPACE
OPENBIT  EQU   X'10'
OPENLIST DS    2F
         SPACE
* IOB FOR CHANNEL PROGRAM
         SPACE
VTOCIOB  DS    0D
IOBFLAG1 DC    X'42000000'     COMMAND CHAIN, NOT RELATED
IOBECB   DC    A(VTOCECB)
         DC    2F'0'
IOBSTART DC    A(0)            CHANNEL PROGRAM BEGINNING
IOBDCB   DC    A(VTOCDCB)
         DC    X'03000000'
         DC    F'0'
IOBSEEK  DC    D'0'            INITIAL SEEK ADDRESS
         SPACE
* EVENT CONTROL BLOCK FOR CHANNEL PROGRAM:
         SPACE
VTOCECB  DC    F'0'            EVENT CONTROL BLOCK
         SPACE 3
* INTERNAL BUFFER FOR LAST DSCB
BUFF     DS    XL148
         SPACE 2
DSCBFMT4 CAMLST SEEK,IOBSEEK+3,VOLID,FMT4
         SPACE
*   WORK AREA FOR DYNAMIC ALLOCATION
         DYNSPACE
S99FLIST DS    XL(S99FLEN)
         SPACE
*
*        JFCB EXIT LIST AND AREA
*
JEXLST   DS    F
JFCBAREA DS    XL176
         DS    0D
VTOCWLEN EQU   *-VTOCWORK
         SPACE 2
         PRINT GEN
         VTOCOM
         PRINT NOGEN
         SPACE 2
         IEFZB4D0
         SPACE 2
         IEFZB4D2
         SPACE 2
         DCBD  DEVD=DA,DSORG=PS
         SPACE 2
JFCB     DSECT
         IEFJFCBN
         END

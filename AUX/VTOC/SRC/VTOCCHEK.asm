VTOCCHEK TITLE 'VTOC COMMAND CHECK  ROUTINE'
***********************************************************************
*                                                                     *
*                                                                     *
* TITLE -      VTOC COMMAND CHECK  ROUTINE                            *
*                                                                     *
* FUNCTION -   CHECK THE CONDITIONS SPECIFIED ON THE VTOC COMMAND.    *
*              SEE IF THE DATA SET PASSED SHOULD BE PROCESSED.        *
*              THE LIMIT, ENDING, CONTAINING, CCHH, LIMIT, AND,       *
*              AND OR KEYWORDS ARE PROCESSED BY THIS ROUTINE.         *
*                                                                     *
* OPERATION -  FIRST GET THE LENGTH OF THE DSNAME AND SAVE IT.        *
*              THEN GET THE FORMAT 3 DSCB, IF ONE EXISTS.  TRY        *
*              EACH KEYWORD TO SEE IF IT WILL EXCLUDE THE DATA        *
*              SET FROM FURTHER PROCESSING.                           *
*                                                                     *
* INPUT -      VTOC COMMON AREA ( VTOCOM )                            *
*              POINTED TO BY REGISTER 1                               *
*              USE PARSE DATA, FORMAT 1, 3, AND 4 DSCB'S              *
*              FOR DSORG, RECFM, ALLOC, USED, PROT, CATLG, OR SECAL   *
*              CALL VTOCFORM TO FORMAT THE PARMS.  USE FORMATTED DSCB *
*                                                                     *
* OUTPUT -     A RETURN CODE OF 0 TO CONTINUE PROCESSING OR 8 TO      *
*              EXCLUDE THIS DATA SET.                                 *
*                                                                     *
* ATTRIBUTES - REENTRANT, REUSEABLE, REFRESHABLE.                     *
*                                                                     *
*                                                                     *
*         PROGRAMMED BY R. L. MILLER  (415) 485-6241                  *
*                                                                     *
* 9/26/84 - MODIFIED BY A. BRUCE LELAND AT HITACHI TO SUPPORT   ABL-ICF
*           123 EXTENTS FOR VSAM DATA SETS IN AN ICF CATALOG.   ABL-ICF
*                                                                     *
* 9/26/84 - MODIFIED BY A. BRUCE LELAND AT HITACHI TO CORRECT   ABL-EXT
*           LIM(EX GT 2) TO MEAN EXTENTS (NO EXPDT).            ABL-EXT
*                                                                     *
* 9/26/84 - MODIFIED BY A. BRUCE LELAND AT HITACHI TO CORRECT   ABL-049
*           LIM(XXX ... ERROR MESSAGE                           ABL-049
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
*        MACROS FOR CHECK ROUTINE
*
         MACRO
&LABEL   VTCHL &KEY           CALL THE KEYWORD CHECK ROUTINE
&LABEL   L     R1,SUB&KEY.OPER    GET THE OPERATOR VALUE
         BAL   R8,GETOPER    TRANSLATE TO A NUMBER
         ST    R15,REFOPER     SAVE IT TOO
         LA    R1,SUB&KEY.VALU   GET THE VALUE PDL
         ST    R1,REFVAL      SAVE THAT ADDRESS THREE
         CLI   FLAGNM&KEY,0  HAS IT BEEN CONVERTED?
         BNE   VTP&SYSNDX    YES, SKIP ALONG
         MVI   FLAGNM&KEY,1  NOTE IT AS CONVERTED
         BAL   R8,PDLNUM     GO CONVERT IT
         ST    R15,NUMBER&KEY      SAVE THE VALUE
         LA    R4,SUB&KEY.KEY  POINT TO THE IKJIDENT FOR THE KEYWORD
         BAL   R8,GETKEY     CONVERT TEXT TO A NUMERIC KEY
         STC   R15,NUMKEY&KEY  SAVE THAT NUMERIC KEY
         LTR   R15,R15       WAS IT SUCCESSFUL?
         BNZ   VTP&SYSNDX    YES, SKIP ALONG
*        ISSUE A MESSAGE - A BAD LIM, AND, OR KEYWORD
         MVC   MSGTEXT2,KEYERR  START THE ERROR MESSAGE
         L     R1,0(R4)      POINT TO THE TEXT
         MVC   MSGTEXT2+48(6),0(R1)  THEN ADD IT TO THE MESSAGE ABL-049
         VTOCMSG MSGTEXT2    ISSUE THE ERROR MESSAGE
VTP&SYSNDX DS  0H
         SR    R1,R1         CLEAR A REGISTER
         ICM   R1,1,NUMKEY&KEY GET THE KEYWORD VALUE
         BZ    VTE&SYSNDX    IF NOT SET, SKIP THE EVALUATION
         ST    R1,REFKEY      SAVE THE ADDRESS
         LA    R1,NUMBER&KEY  GET THE ADDRESS OF CONVERTED NUMBER
         ST    R1,REFNUM      SAVE IT'S ADDRESS
         BAL   R8,LIMEVAL     GO EVALUATE THE EXPRESSION
VTE&SYSNDX DS  0H
         MEND
         SPACE 3
         MACRO
&LABEL   VTANDOR &NUM         EVALUATE, THEN DO AND OR OR FUNCTION
&LABEL   CLI   ANDOR&NUM.K+1,0  WAS THIS KEYWORD SET?
         BE    LIMCOMP        NO, JUST CHECK THE FINAL RESULT
         VTCHL &NUM           YES, EVALUATE
         CLI   ANDOR&NUM.K+1,1  WAS IT AN AND ?
         BE    VTA&SYSNDX     YES, DO THE AND
         O     R15,LIMVAL     NO, OR IT
         B     VTE&SYSNDX     FINISHED WITH THIS EXPRESSION
VTA&SYSNDX N   R15,LIMVAL     AND THE EXPRESSION VALUE
VTE&SYSNDX ST  R15,LIMVAL     SAVE THE VALUE
         MEND
*
         EJECT
VTOCCHEK ENTER 12,12          DO THE HOUSEKEEPING
         LR    R11,R1         SAVE ADDR OF VTOCOM
         USING VTOCOM,R11     SET ITS ADDRESSABILITY
         L     R9,ADDRANSR    POINT TO THE PARSE ANSWER
         USING PDL,R9         SET ITS ADDRESSABILITY
         USING CHEKWORK,R13   SET ADDRESSABILITY FOR LOCAL WORK AREA
*
*        SEE WHAT THE FORMAT ID IS
*
CHEKFMT  L     R7,DSCBADDR    POINT TO THE DSCB
         LA    R7,8(R7)       GET PAST THE HEADER
         USING DSCB1,R7       SET ADDRESSABILITY
         CLI   FORMATK+1,0    DID HE SPECIFY VARIOUS DSCB'S
         BNE   CHEKFMTI       YES, GO DO HIS CHECKS
CHEKFMTI DS    0H             NOT YET PROGRAMMED
*
*        STANDARD IS ONLY TO ALLOW FORMAT ONES TO GO
*
         CLI   DS1FMTID,C'1'  IS THIS A FORMAT 1?
         BNE   CHECKOUT       NO, EXCLUDE IT FROM FURTHER PROCESSING
*
*              FIRST SEE HOW BIG THE DSNAME IS
*
         LA    R1,DS1FMTID    POINT PAST THE DSNAME
         TRT   DS1DSNAM,BLKTRTAB  FIND THE FIRST BLANK
         SR    R1,R7          SUBTRACT TO GET THE LENGTH
         STH   R1,DSNLEN      SAVE THE DSNAME LENGTH
         LR    R3,R1          KEEP THE LENGTH FOR LATER
*
*        GET THE FORMAT 3 DSCB, IF IT EXISTS
*
         XC    FMT3,FMT3      CLEAR IT FIRST
         LA    R2,FMT3        START OF THE FORMAT 3 AREA        ABL-ICF
         LA    R1,DS1PTRDS    POINTER TO FIRST DSCB3            ABL-ICF
         SPACE 1                                                ABL-ICF
NXTFMT3  CLC   0(5,R1),=XL5'0000000000'  ANY FORMAT 3?          ABL-ICF
         BE    FMT3NO         NO, SKIP ALONG
*
*        SET UP THE CAMLST
*
         MVC   CAMSEEK(4),CAMSCON  MOVE IN THE FIRST WORD OF CAMLST
         ST    R1,CAMSEEK+4   SAVE IT
         LA    R1,VOLID       POINT TO THE VOLUME SERIAL
         ST    R1,CAMSEEK+8   SAVE IT
         ST    R2,CAMSEEK+12  SAVE THE DSCB3 START ADDRESS      ABL-ICF
         OBTAIN CAMSEEK       GET THE DSCB
         LTR   R15,R15        TEST THE RETURN CODE
         BNZ   OBT3ERR        BAD NEWS, ISSUE THE MESSAGE
         LA    R1,DS3PTRDS-FMT3(R2)   NEXT DSCB3 POINTER        ABL-ICF
         LA    R2,L'FMT3(R2)          NEXT DSCB3 POSITION       ABL-ICF
         B     NXTFMT3                                          ABL-ICF
*
*        PROCESS THE LEVEL KEYWORD
*
FMT3NO   CLI   LEVKEY+1,0     WAS LEVEL SPECIFIED?
         BE    LEVEND         NO, SKIP ON
         LA    R4,LEVEL       YES, POINT TO THE PDE
         USING PDEDSNAM,R4    SET ADDRESSABILITY
         LR    R2,R7          POINT TO THE START OF THE DSNAME
LEVNEXT  SR    R5,R5          CLEAR FOR INSERT
         ICM   R5,B'0011',PDEDSNL  GET THE DSNAME LENGTH
         BZ    CHECKOUT       END OF THE LINE, EXCLUDE IT
         L     R6,PDEDSN      POINT TO THE LEVEL
         CR    R3,R5          COMPARE LENGTHS
         BL    LEVINC         THIS LEVEL IS LONGER THAN DSN, NO MATCH
         BCTR  R5,0           MINUS ONE FOR THE EX
         EX    R5,COMPARE     CHECK THE LENGTHS
         BE    LEVEND         IT MATCHES, ALLOW IT
LEVINC   ICM   R4,B'0111',PDEDCHN GET THE NEXT LEVEL PDE POINTER
         BNZ   LEVNEXT        IF IT'S THERE, KEEP LOOKING
         B     CHECKOUT       NO MATCHES, EXCLUDE THIS DSNAME
LEVEND   DS    0H
         DROP  R4             FINISHED WITH THE PDE
*
*        PROCESS THE ENDING KEYWORD
*
         CLI   ENDKEY+1,0     WAS ENDING SPECIFIED?
         BE    ENDEND         NO, SKIP ON
         LA    R4,ENDING      YES, POINT TO THE PDE
         USING PDEDSNAM,R4    SET ADDRESSABILITY
ENDNEXT  SR    R5,R5          CLEAR FOR INSERT
         ICM   R5,B'0011',PDEDSNL  GET THE DSNAME LENGTH
         BZ    CHECKOUT       END OF THE LINE, EXCLUDE IT
         L     R6,PDEDSN      POINT TO THE ENDING
         CR    R3,R5          COMPARE LENGTHS
         BL    ENDINC         THIS ENDING IS LONGER THAN DSN, NO MATCH
         LR    R2,R7          POINT TO THE START OF THE DSNAME
         AR    R2,R3          POINT TO THE END
         SR    R2,R5          BACKUP TO COMPARE THIS LENGTH
         BCTR  R5,0           MINUS ONE FOR THE EX
         EX    R5,COMPARE     CHECK THE LENGTHS
         BE    ENDEND         IT MATCHES, ALLOW IT
ENDINC   ICM   R4,B'0111',PDEDCHN GET THE NEXT ENDING PDE POINTER
         BNZ   ENDNEXT        IF IT'S THERE, KEEP LOOKING
         B     CHECKOUT       NO MATCHES, EXCLUDE THIS DSNAME
ENDEND   DS    0H
         DROP  R4             FINISHED WITH THE PDE
*
*        PROCESS THE CONTAINING KEYWORD
*
         CLI   CONTAINK+1,0   WAS CONTAINING SPECIFIED?
         BE    CONEND         NO, SKIP ON
         LA    R4,CONTAIN     YES, POINT TO THE PDE
         USING PDEDSNAM,R4    SET ADDRESSABILITY
CONNEXT  SR    R5,R5          CLEAR FOR INSERT
         ICM   R5,B'0011',PDEDSNL  GET THE DSNAME LENGTH
         BZ    CHECKOUT       END OF THE LINE, EXCLUDE IT
         L     R6,PDEDSN      POINT TO THE CONTAINING
         CR    R3,R5          COMPARE LENGTHS
         BL    CONINC         THIS CONTAIN IS LONGER THAN DSN, NO MATCH
         LR    R1,R7          POINT TO THE START OF THE DSNAME
         AR    R1,R3          POINT TO THE END
         SR    R1,R5          BACKUP TO COMPARE THIS LENGTH - LAST ONE
         LR    R2,R7          POINT TO THE START OF THE DSNAME
         BCTR  R5,0           MINUS ONE FOR THE EX
CONCOMP  EX    R5,COMPARE     CHECK THE LENGTHS
         BE    CONEND         IT MATCHES, ALLOW IT
         LA    R2,1(R2)       CHECK THE WHOLE DSNAME
         CR    R2,R1          CHECK FOR THE END OF THE REAL DSN
         BNH   CONCOMP        NOT THERE YET
CONINC   ICM   R4,B'0111',PDEDCHN GET THE NEXT CONTAINING PDE POINTER
         BNZ   CONNEXT        IF IT'S THERE, KEEP LOOKING
         B     CHECKOUT       NO MATCHES, EXCLUDE THIS DSNAME
CONEND   DS    0H
         DROP  R4             FINISHED WITH THE PDE
*
*        NOW THE BIG MESS, CHECK FOR LIMIT, AND'S, AND OR'S
*
         CLI   LIMITK+1,0     WAS LIMIT SPECIFIED
         BE    LIMEND         NO, THEN THERE CAN BE NO AND'S OR OR'S
         NI    VTCFMTCK,255-VTCFMTCC  TURN OFF THE ROUTINE CALL FLAG
         VTCHL L              EVALUATE THE LIMIT 1=TRUE 0=FALSE
         ST    R15,LIMVAL     SAVE THE ANSWER
         VTANDOR 1            CHECK AND1 OR OR1
         VTANDOR 2            CHECK AND2 OR OR2
         VTANDOR 3            CHECK AND3 OR OR3
LIMCOMP  L     R15,LIMVAL     GET THE RESULT OF ALL THIS
         LTR   R15,R15        TEST IT
         BZ    CHECKOUT       IT GETS EXCLUDED
LIMEND   DS    0H
         B     CHECKIN        ALL TESTS PASSED, INCLUDE THIS ONE
         SPACE 5
*
*        EVALUATION ROUTINE FOR   KEYWORD  OPER  VALUE
*
LIMEVAL  L     R5,REFKEY      GET THE KEYWORD VALUE
         MH    R5,H12         MULTIPLY IT BY 12
         A     R5,ATABTITL    THEN RELOCATE IT
         SR    R10,R10         CLEAR THE ROUTINE POINTER
         TM    1(R5),X'80'    IS IT A FORMATTED ITEM?
         BO    LIMFORM        YES, GO DO IT
         SR    R6,R6         CLEAR A REGISTER
         IC    R6,2(R5)      GET THE OFFSET INTO VTFMT
         IC    R10,1(R5)      GET THE ROUTINE NUMBER
         LTR   R10,R10         SEE IF IT'S A GOOD NUMBER
         BP    LIMEVAL1       IT'S ALL RIGHT
LIMABEND ABEND 702,DUMP       CRASH AND BURN
LIMEVAL1 B     *(R10)         AND GO TO IT
         B     LIMDATE        CDATE, EXPDT, REFDT
         B     LIMLUSE        *** DUMMY ENTRY ***
         B     LIMFORM        FORM , USED SPACE
         B     LIMFORM        UNUSED SPACE
         B     LIMFORM        PCT USED
         B     LIMEXT         EXTENTS
         B     LIMBLREC       LRECL, BLKSZ, SEC Q
         B     LIMCCHH       CCHH CHECKING
         SPACE 5
*
*        PERFORM THE FORMATTED ITEM CHECKING
*
LIMFORM  DS    0H
         TM    VTCFMTCK,VTCFMTCC  WAS FORMAT CALLED BEFORE FOR THIS DS
         BO    LIMFCALD       YES, DON'T CALL IT AGAIN
         VTCALL FORM          NO, CALL IT TO GET THE ITEMS
         OI    VTCFMTCK,VTCFMTCC+VTCFMTCD  THEN SET THE SWITCHES
LIMFCALD SR    R2,R2          CLEAR A WORK REG
         A     R6,FORMATAD   RELOCATE THE BLOCK
         B     *+4(R10)         AND GO TO IT
         B     LIMFORMA      FORMATTED ITEM
         B     LIMABEND       CDATE, EXPDT
         B     LIMABEND       LAST USE DATE
         B     LIMALLOC       ALLOC, USED SPACE
         B     LIMUNUSD       UNUSED SPACE
         B     LIMPCT         PCT USED
LIMFORMA DS    0H
         IC    R2,2(R5)       GET THE OFFSET IN VTFMT
         A     R2,FORMATAD    THEN RELOCATE IT
         L     R4,REFVAL      GET THE VALUE PDE
         LH    R3,4(R4)       GET THE LENGTH OF THE STRING
         L     R1,0(R4)       AND ITS ADDRESS
*
*        DO THE ACTUAL COMPARE
*
         BCTR  R3,0           DOWN ONE FOR AN EX
         EX    R3,COMPLIM     COMPARE AS SPECIFIED
COMPDONE DS    0H             GET THE OPERATOR ADDRESS
         BL    COMPLOW        CHECK THE OPERATOR, VALUE LESS THAN ITEM
         BE    COMPEQ         CHECK THE OPERATOR, KEYWORD EQUALS VALUE
*                             KEYWORD IS GREATER THAN THE VALUE
COMPHI   CLI   REFOPER+3,NE       WAS OPERATOR NE
         BE    COMPYES        HIGH SATISFIES THE EXPRESSION
         CLI   REFOPER+3,GT       ALSO FOR GT
         BE    COMPYES        HIGH SATISFIES THE EXPRESSION
         CLI   REFOPER+3,GE       AND FOR GE
         BE    COMPYES        HIGH SATISFIES THE EXPRESSION
         B     COMPNO         THIS ONE DOESN'T FIT
*                             KEYWORD IS EQUAL TO THE VALUE
COMPEQ   CLI   REFOPER+3,EQ       WAS OPERATOR EQ
         BE    COMPYES        EQ   SATISFIES THE EXPRESSION
         CLI   REFOPER+3,LE       ALSO FOR LE
         BE    COMPYES        EQ   SATISFIES THE EXPRESSION
         CLI   REFOPER+3,GE       AND FOR GE
         BE    COMPYES        EQ   SATISFIES THE EXPRESSION
         B     COMPNO         THIS ONE DOESN'T FIT
*                             KEYWORD IS LESS THAN THE VALUE
COMPLOW  CLI   REFOPER+3,NE       WAS OPERATOR NE
         BE    COMPYES        LOW  SATISFIES THE EXPRESSION
         CLI   REFOPER+3,LT       ALSO FOR LT
         BE    COMPYES        LOW  SATISFIES THE EXPRESSION
         CLI   REFOPER+3,LE       AND FOR LE
         BE    COMPYES        LOW  SATISFIES THE EXPRESSION
         B     COMPNO         THIS ONE DOESN'T FIT
*
*        IT FITS OR IT DOESN'T
*
COMPYES  LA    R15,1          SET A TRUE VALUE
         BR    R8             THEN RETURN
COMPNO   SR    R15,R15        SET A FALSE VALUE
         BR    R8             THEN RETURN
*
*        SPECIAL ROUTINES TO CHECK NON-FORMATTED ITEMS
*
LIMDATE  DS    0H
*
*        COMPARE DATES
*
         LA    R14,DS1CREDT  POINT TO CREATION DATE
         CLI   REFKEY+3,CDATE      IS THAT IT?
         BE    LIMDGET       YES, THIS IS IT
         LA    R14,DS1EXPDT  POINT TO EXPIRATION DATE
         CLI   REFKEY+3,EXPDT      IS THAT IT?
         BE    LIMDGET       YES, THIS IS IT
         LA    R14,DS1REFD   NO, USE REFERENCE DATE
LIMDGET  SR    R15,R15       CLEAR A WORK REG
         IC    R15,0(R14)    GET THE YEAR
         MH    R15,H1000     TIMES 1000
         SR    R1,R1         CLEAR ANOTHER WORK REG
         ICM   R1,3,1(R14)    GET THE DAYS
         AR    R15,R1        PUT THE DATE TOGETHER
         L     R1,REFNUM     GET THE ADDRESS OF THE VALUE
         L     R1,0(R1)      GET THE VALUE ITSELF
         CR    R15,R1        COMPARE THEM
         B     COMPDONE      GO CHECK OPERANDS
LIMLUSE  DS    0H
*
*        LAST USE DATE
*
         SR    R14,R14       CLEAR THE DATE
         CLC   ZERO,75(R7)   CHECK FOR NO DATA
         BE    LIMLUCMP      RIGHT, SKIP ON
         MVC   CHEKDBLW+5(3),75(R7)  MOVE IN THE LAST USE DATE
         CVB   R14,CHEKDBLW  CONVERT IT TO BINARY
LIMLUCMP L     R1,REFNUM     GET THE ADDRESS OF THE VALUE
         L     R1,0(R1)      GET THE VALUE
         CR    R14,R1        DO THE COMPARE
         B     COMPDONE      THEN CHASE DOWN THE OPERANDS
LIMEXT   DS    0H
*
*        EXTENTS
*
         L     R1,REFNUM     GET THE COMPARE VALUE ADDRESS
         CLC   DS1NOEPV,3(R1)        COMPARE THEM
         B     COMPDONE      GO CHECK OPERANDS
LIMBLREC DS    0H
*
*        LRECL, BLKSZ, SECQ
*
         L     R1,REFNUM     GET THE ADDRESS OF THE COMPARE VALUE
         L     R15,0(R1)      THEN GET THE VALUE ITSELF
         CLI   REFKEY+3,BLKSZ      BLOCK SIZE?
         BNE   LIMB1         NO, KEEP CHECKING
         LH    R1,DS1BLKL    COMPARE TO THE BLOCK SIZE
         CR    R1,R15        COMPARE THEM
         B     COMPDONE      GO SIFT THROUGH THE OPERANDS
LIMB1    CLI   REFKEY+3,LRECL  LOGICAL RECORD LENGTH
         BNE   LIMB2         NO, KEEP GOING
         LH    R1,DS1LRECL   COMPARE TO THE LRECL
         CR    R1,R15        COMPARE THEM
         B     COMPDONE      GO CHECK THE OPERANDS
LIMB2    MVC   HWORK,DS1SCALO+2 GET THE SECONDARY QUANTITY
         LH    R1,HWORK      DO THE COMPARE
         CR    R1,R15        COMPARE THEM
         B     COMPDONE      THEN CHECK THE OPERANDS
*
*        SPACE CHECKING ROUTINES
*
LIMALLOC DS    0H
*
*        ALLOC AND USED
*
         L     R1,REFNUM     GET THE ADDRESS OF THE CONVERTED NUMBER
         L     R1,0(R1)      GET THE VALUE
         L     R15,0(R6)     GET THE AMOUNT
         CR    R15,R1        COMPARE THEM
         B     COMPDONE      THEN CHECK THE OPERANDS
LIMUNUSD DS    0H
*
*        UNUSED
*
         L     R6,FORMATAD   POINT TO THE FORMATTED VTOC
         USING VTFMT,R6      SET ADDRESSABILITY
         ICM   R14,15,VTFUSED      GET THE AMOUNT USED
         BM    LIMUNUAL      IF MINUS, WE DON'T KNOW
         L     R14,VTFALLOC  GET ALLOC
         S     R14,VTFUSED   MINUS THE AMOUNT USED
LIMUNUAL L     R1,REFNUM     GET THE ENTERED VALUE
         L     R1,0(R1)      NOW ITS VALUE FOR REAL
         CR    R14,R1        COMPARE THE VALUES
         B     COMPDONE      THEN GO CHECK THE OPERANDS
LIMPCT   DS    0H
*
*        PER CENT
*
         L     R6,FORMATAD   POINT TO THE FORMATTED VTOC
         USING VTFMT,R6      SET ADDRESSABILITY
         SR    R14,R14       CLEAR A REGISTER
         ICM   R15,15,VTFUSED      GET THE AMOUNT USED
         BM    LIMP100       IF UNKNOWN USED, SET 100 PER CENT
         CLC   VTFALLOC,ZERO ZERO ALLOCATED SPACE?
         BNE   LIMPCTOK      NO, CONTINUE
         CLC   VTFUSED,ZERO  ZERO USED SPACE?
         BE    LIMPCOMP      YES, PCT IS ZERO
*              ZERO ALLOCATED, NONZERO USED, INCLUDE THIS ONE
         B     COMPYES
LIMP100  LA    R15,100       SET UP 100 PER CENT
         B     LIMPCOMP      GO COMPARE
LIMPCTOK M     R14,F100      MULTIPLY BY 100 PERCENT
         D     R14,VTFALLOC  DIVIDE BY THE ALLOCATION
LIMPCOMP L     R1,REFNUM     GET THE VALUE ADDRESS
         L     R1,0(R1)      THEN THE VALUE
         CR    R15,R1        THEN COMPARE THEM
         B     COMPDONE      THEN GO SIFT THROUGH THE OPERANDS
*
*        CCHH CHECKING IS NOT QUITE STANDARD BECAUSE THERE MAY
*        MAY BE UP TO 16 EXTENTS TO COMPARE.  THE DATA MAY BE
*        CC OR CCHH FORMATS.  THE DATA SET MAY BE EQUAL TO,
*        LESS THAN, AND GREATER THAN ANY PARTICULAR VALUE.
*
LIMCCHH  DS    0H
*
*        FIRST SEE IF THE CCHH WAS CONVERTED
*              CONVERT IT IF NOT, SKIP IF IT'S DONE
*
         L     R5,REFNUM     GET THE ADDRESS OF THE COMPARISON VALUE
         L     R4,0(R5)      GET THE VALUE
         ICM   R6,3,4(R5)    GET THE COMPARE LENGTH
         BP    LIMCSET       IF IT'S SET, THE CONVERSION IS DONE
*                      IT WASN'T SET, CONVERT FROM CHARS TO BINARY
         L     R1,REFVAL     GET THE ADDRESS OF THE IKJIDENT
         L     R2,0(R1)      POINT TO THE TEXT
         LH    R3,4(R1)      GET THE LENGTH OF THE TEXT
*        IT SHOULD BE 4 OR 8 CHARACTERS
         XC    DOUBLE,DOUBLE CLEAR OUT A PLACE TO WORK
         CH    R3,H4         IS IT A CYLINDER ONLY?
         BH    LIMCCON2      NO, TRY FOR A CCHH
         BE    LIMCCON1      YES, JUST CONVERT IT
         VTOCMSG CCHHLEN     LESS THAN FOUR CHARS, ISSUE A MSG
LIMCCON1 LA    R6,1          SET THE COMPARE LENGTH
         B     LIMCMOVE      GO MOVE IT IN
LIMCCON2 LA    R6,3          SET THE COMPARE LENGTH
         CH    R3,H8         WAS IT A CCHH?
         BE    LIMCMOVE      YES, JUST THE RIGHT LENGTH
         VTOCMSG CCHHLEN     WARN THE PERSON
         CH    R3,H8         CHECK AGAIN
         BL    LIMCMOVE      IS IT OVER 8 CHARS?
         LH    R3,H8         YES, SET IT FOR THE MAX - IGNORE RR
LIMCMOVE BCTR  R3,0          MINUS ONE FOR THE EX
         EX    R3,MOVECCHH   MOVE IN THE CHARS
         TR    DOUBLE,DECTABLE TRANSLATE HEX EBCDIC TO HEX BINARY
         PACK  CYLH(5),DOUBLE(9)  SQUISH OUT THE ZONES
         L     R4,CYLH       GET THE CCHH
         ST    R4,0(R5)      SAVE IT FOR LATER
         STH   R6,4(R5)      SAVE THE LENGTH TOO
LIMCSET  DS    0H            THE NUMBER IS CONVERTED
*
*        COMPARE THE EXTENTS TO THE CCHH VALUE.
*        ANY EXTENT MAY BE LT, EQ, AND GT A PARTICULAR
*        VALUE, AND ALL THE EXTENTS MUST BE CHECKED.
*
         MVI   CCHHCOMP,0    CLEAR THE FLAGS
         SR    R2,R2         CLEAR A REG FOR AN EXTENT COUNTER
         ICM   R2,1,DS1NOEPV GET THE NUMBER OF EXTENTS
         BZ    COMPNO        NO EXTENTS, JUST GO SEE
*
*        GET EACH EXTENT AND PROCESS IT
*
         SR    R1,R1         FIRST EXTENT
EXTNEXT  LR    R14,R1                                           ABL-ICF
         S     R14,=F'3'                                        ABL-ICF
         SRDA  R14,32                                           ABL-ICF
         D     R14,=F'13'    (EXTENT-3) / 13                    ABL-ICF
         LR    R14,R15       EXTENT TABLE IN USE                ABL-ICF
         MH    R14,=H'13'                                       ABL-ICF
         MH    R15,=H'148'                                      ABL-ICF
         LR    R3,R1         EXTENT - ((EXTENT-3) / 13) * 13    ABL-ICF
         SR    R3,R14        EXTENT INSTRUCTION ADDRESS         ABL-ICF
         SLL   R3,2          TIMES 4
         EX    R0,GETEXT(R3) GET THE EXTENT ADDRESS INTO R3
*
*        CHECK THE BOTTOM OF THE EXTENT
*
         NI    CCHHCOMP,255-CCHHX TURN OFF THE STRADDLE FLAG
         EX    R6,CLCEXTLO    DO THE COMPARE
         BH    SETH1         THE FIELD IS HIGHER THAN THE VALUE
         BE    SETEQ1        THE FIELD IS EQUAL TO THE VALUE
         OI    CCHHCOMP,CCHHLOW+CCHHX  LOWER -  POSSIBLE STRADDLE
         B     CHECKHI       GO CHECK THE TOP OF THIS EXTENT
SETH1    OI    CCHHCOMP,CCHHHIGH  SET THE FLAG
         B     CHECKHI       GO CHECK THE TOP OF THIS EXTENT
SETEQ1   OI    CCHHCOMP,CCHHEQ   SET THE FLAG
*
*        CHECK THE TOP OF THE EXTENT
*
CHECKHI  EX    R6,CLCEXTHI   DO THE COMPARE
         BE    SETEQ2        EQUAL, GO SET IT
         BL    EXTSET        LOW, GO SET IT
*
*        THIS IS THE ONLY SLIGHTLY TRICKY PART, A STRADDLE
*        IF THE BOTTOM OF THE EXTENT IS LOWER THAN THE VALUE AND THE
*        TOP OF THE EXTENT IS HIGHER THAN THE VALUE, THEN THE
*        EQ FLAG SHOULD BE SET TOO.
*
         OI    CCHHCOMP,CCHHHIGH  SET THE HIGH FLAG
         TM    CCHHCOMP,CCHHX     WAS THE BOTTOM LOWER THAN THE VALUE?
         BZ    EXTSET        NO, SKIP ON
SETEQ2   OI    CCHHCOMP,CCHHEQ    SET THE EQ FLAG
*
*        FINISHED WITH THAT EXTENT, CHECK FOR MORE
*
EXTSET   DS    0H
         LA    R1,1(R1)      INCREMENT THE EXTENT COUNTER
         CR    R1,R2         CHECK THE EXTENT COUNTER
         BNL   LIMCOPER      THAT'S ALL FOLKS
         TM    CCHHCOMP,CCHHHIGH+CCHHEQ+CCHHLOW  ARE THEY ALL SET?
         BNO   EXTNEXT       NO, CONTINUE LOOKING
*                            YES, STOP NOW - ALL THE FLAGS ARE SET
LIMCOPER L     R4,REFOPER    GET THE NUMERIC VALUE OF THE KEY
         IC    R4,CCHHTAB(R4)  GET A FLAG MASK
         EX    R4,CCHHOPER   CHECK TO SEE IF THE CONDITION IS SET
         BZ    COMPNO        NOT THERE
         B     COMPYES       YES
*
*        EXECUTED INSTRUCTIONS TO GET THE ADDRESS OF THIS EXTENT
*
GETEXT   LA    R3,DS1EXT1           1ST EXTENT
         LA    R3,DS1EXT2           2ND EXTENT
         LA    R3,DS1EXT3           3RD EXTENT
         LA    R3,DS3EXTNT+00(R15)  4TH EXTENT                  ABL-ICF
         LA    R3,DS3EXTNT+10(R15)  5TH EXTENT                  ABL-ICF
         LA    R3,DS3EXTNT+20(R15)  6TH EXTENT                  ABL-ICF
         LA    R3,DS3EXTNT+30(R15)  7TH EXTENT                  ABL-ICF
         LA    R3,DS3ADEXT+00(R15)  8TH EXTENT                  ABL-ICF
         LA    R3,DS3ADEXT+10(R15)  9TH EXTENT                  ABL-ICF
         LA    R3,DS3ADEXT+20(R15) 10TH EXTENT                  ABL-ICF
         LA    R3,DS3ADEXT+30(R15) 11TH EXTENT                  ABL-ICF
         LA    R3,DS3ADEXT+40(R15) 12TH EXTENT                  ABL-ICF
         LA    R3,DS3ADEXT+50(R15) 13TH EXTENT                  ABL-ICF
         LA    R3,DS3ADEXT+60(R15) 14TH EXTENT                  ABL-ICF
         LA    R3,DS3ADEXT+70(R15) 15TH EXTENT                  ABL-ICF
         LA    R3,DS3ADEXT+80(R15) 16TH EXTENT                  ABL-ICF
*
*        ISSUE ERROR MESSAGES AND RETURN
*
OBT3ERR  VTOCMSG OBT3ERRM   OBTAIN ERROR MESSAGE
CHECKOUT LA    R15,8          EXCLUDE THIS DATA SET
         B     CHEKRET        RETURN
*
CHECKIN  SR    R15,R15        CLEAR THE REGISTER, PROCESS THIS DATA SET
CHEKRET  LEAVE EQ
*
*
         EJECT
*
*        ROUTINES USED ABOVE
*
         EJECT
*
*        PDLNUM - CONVERT FROM CHARACTERS ( EBCDIC ) TO AN INTEGER
*              BINARY FORM, PASSED BACK VIA REGISTER 15
*              A PARSE PDE IS THE INPUT AS SHOWN IN THE SAMPLE BELOW
*                       LA    R1,PDL     POINT TO THE PARSE DECRIPTION
*                       BAL   R8,PDLNUM  GO CONVERT TO NUMERICS
*              THE ROUTINE WILL TERMINATE IF IT FINDS NON-NUMERICS
*                 ANY CHARACTERS OTHER THEN 0-9, +, -
*              REGISTERS 1, 2, 5, 6, AND 7 ARE USED
*
PDLNUM   STM   R1,R8,PDLNSAVE SAVE THE REGISTERS
         LH    R2,4(R1)       GET THE STRING ADDRESS
         L     R1,0(R1)       GET THE STRING ADDRESS
         MVI   PDLMINUS,0     CLEAR THE NEGATIVE NUMBER FLAG
         SR    R5,R5          CLEAR THE CHARACTER COUNTER
         SR    R15,R15        CLEAR THE ANSWER
PDLLOOP  LA    R6,0(R5,R1)    POINT TO THIS DIGIT
         LA    R5,1(R5)       GET TO THE NEXT DIGIT
         CR    R5,R2          IS THIS THE END OF THE STRING?
         BH    PDLFINI        YES, EXIT
         SR    R7,R7          CLEAR A WORK REGISTER
         IC    R7,0(R6)       GET THE CHARACTER
         SH    R7,PDLH240     SUBTRACT THE CHARACTER C'0'
         BM    PDLSP          IF NEGATIVE, CHECK SPECIAL CHARACTERS
         MH    R15,PDLH10     IT'S A DIGIT, MULTIPLY PRIOR NUM BY TEN
         AR    R15,R7         ADD ON THE NEW DIGIT
         B     PDLLOOP        AND LOOP FOR MORE
*
*        CHECK FOR SPECIAL CHARACTERS
*
PDLSP    CLI   0(R6),C' '     IS IT A BLANK?
         BE    PDLLOOP        THEN IT'S OK
         CLI   0(R6),C'+'     IS IT A PLUS?
         BE    PDLLOOP        THAT'S ALSO OK
         CLI   0(R6),C'-'     IS IT A MINUS?
         BNE   PDLFINI        NO, JUST QUIT
         MVI   PDLMINUS,1     YES, NOTE IT
         B     PDLLOOP        AND LOOK FOR MORE
*
*        QUIT, AFTER SETTING R15 TO NEGATIVE IF NEEDED
*
PDLFINI  CLI   PDLMINUS,1     WAS A MINUS SIGN FOUND?
         BNE   PDLLEAVE       NO, EXIT
         LNR   R15,R15        YES, MAKE IT NEGATIVE
PDLLEAVE LM    R1,R8,PDLNSAVE RESTORE THE REGISTERS
         BR    R8             RETURN
PDLH10   DC    H'10'
PDLH240  DC    H'240'
         EJECT
*
*        ROUTINE TO CONVERT A TEXT DSCB ITEM
*        INTO ITS KEY NUMBER
*        INPUT IS REG 4 - IKJIDENT PTR
*        OUTPUT IS REG 15 - KEY NUMBER
*        ENTRY VIA BAL   R8,GETKEY
*
GETKEY   L     R1,ATABTITL     POINT TO THE TABLE
         LA    R1,12(R1)     POINT TO THE FIRST ENTRY
         LA    R15,1           SET UP THE KEY NUMBER COUNTER
         L     R6,0(R4)      POINT TO THE ENTERED TEXT
         ICM   R3,3,4(R4)    GET THE LENGTH OF THE ENTERED TEXT
         BNP   GETKNOTF      NOT FOUND IF ZERO
         BCTR  R3,0          MINUS ONE FOR THE EX
GETKLOOP LA    R2,4(R1)      POINT TO THE COMPARISON TEXT
         CLI   0(R2),C' '    IS IT HERE?
         BNE   GETKSTD       YES, THIS IS IT
         LA    R2,1(R2)      NO, MOVE OVER ONE MORE
         CLI   0(R2),C' '    IS IT HERE?
         BNE   GETKSTD       YES, THIS IS IT
         LA    R2,1(R2)      NO, MOVE OVER ONE MORE
GETKSTD  EX    R3,GETKCOMP   COMPARE THE KEY TEXT
         BNE   GETNFND       NOT HERE, BRANCH                   ABL-EXT
         CLC   =C'EX ',0(R6) EX (FOR EXTENTS)?                  ABL-EXT
         BNE   GETKFND       I FOUND IT                         ABL-EXT
         CLC   =C'EXP',0(R2) EXP (FOR EXPDT)?                   ABL-EXT
         BNE   GETKFND       I FOUND IT                         ABL-EXT
         SPACE 1                                                ABL-EXT
GETNFND  DS    0H                                               ABL-EXT
         LA    R1,12(R1)     GET TO THE NEXT KEY
         LA    R15,1(R15)    INCREMENT THE KEY COUNTER
         CH    R15,H26       CHECK FOR THE END OF THE TABLE
         BNH   GETKLOOP      NOT YET, KEEP LOOKING
*
*        KEY WAS NOT FOUND, SEND BACK A ZERO
*
GETKNOTF SR    R15,R15       SET UP THE ZERO AND RETURN
GETKFND  BR    R8            JUST RETURN
GETKCOMP CLC   0(0,R6),0(R2) EXECUTED TEXT COMPARE
H26      DC    H'26'
         EJECT
*
*        ROUTINE TO CONVERT THE OPERATOR TEXT
*        INTO A NUMERIC VALUE
*
GETOPER  LA    R15,1         NUMERIC VALUE COUNTER
GETOLOOP LR    R14,R15       GET THE NUMBER
         SLA   R14,1         MULTIPLY BY 2
         LA    R14,OPERS(R14)      RELOCATE IT
         CLC   0(2,R14),0(R1)      IS THIS THE TEXT?
         BE    GETOFND       YES, RETURN THE NUMBER
         LA    R15,1(R15)    NO, TRY THE NEXT ONE
         CH    R15,H7        CHECK FOR THE END
         BL    GETOLOOP      NOT THERE YET, KEEP TRYING
         VTOCMSG OPERERR,OPERERR2  ISSUE THE MESSAGE
         LA    R15,1         SET THE DEFAULT OPERATOR, EQ
GETOFND  BR    R8            THEN RETURN
         EJECT
*
*        PROGRAM CONSTANTS
*
COMPLIM  CLC   0(0,R2),0(R1)  COMPARE KEYWORD TO VALUE
MOVECCHH MVC   DOUBLE(0),0(R2)
CLCEXTLO CLC   2(0,R3),0(R5)
CLCEXTHI CLC   6(0,R3),0(R5)
CCHHOPER TM    CCHHCOMP,0
CCHHTAB  DC    X'0040A0206080C0'  CCHHCOMP FLAGS
OPERS    DC    C'  EQNELTLEGTGE'
*    FOR  EQ, NE, LT, LE, GT, GE
EDMASK   DC    XL16'40202020202020202020202020202120'
BLANKS   DC    CL16'                '
STARS    DC    CL16'****************'
BLKTRTAB DC    XL64'00',X'04',XL192'00'
CAMSCON  CAMLST SEEK,*,*,*
COMPARE  CLC   0(0,R6),0(R2)  EXECUTED COMPARE
DECTABLE EQU   *-C'A'   CONVERT EBCDIC HEX TO BINARY
         DC    X'0A0B0C0D0E0F'
         DC    (C'0'-C'F'-1)X'FF'  FILLER
         DC    X'00010203040506070809'
*
*
*
H3       DC    H'3'
H4       DC    H'4'
H7       DC    H'7'
H8       DC    H'8'
H10      DC    H'10'
H12      DC    H'12'
ZERO     DC    F'0'
F100     DC    F'100'
H1000    DC    H'1000'
F127     DC    F'127'
*
*
         PRINT NOGEN
*
*        PROGRAM MESSAGES
*
OBT3ERRM MSG   ' VTOCCHEK - ERROR IN OBTAIN FOR FORMAT 3 DSCB '
KEYERR   MSG   ' VTOCCHEK - LIM, AND, OR OR SUBPARM ERROR - XXXXXX '
CCHHLEN  MSG   ' VTOCCHEK - CCHH SHOULD BE 4 OR 8 HEX CHARACTERS '
OPERERR  MSG   ' VTOCCHEK - OPERATOR WAS NOT EQ, NE, LT, LE, GT, OR GE'
OPERERR2 MSG   '          - WILL ASSUME EQ'
*
         EJECT
*
*
*        P A R S E   C O N T R O L   L I S T
*
*
         PRINT OFF
         COPY  VTOCPARS
         PRINT ON
*
*        DYNAMIC WORK AREA
*
         SPACE 3
CHEKWORK DSECT
         DS    18A            PRINT ROUTINE SAVE AREA
CHARS    DS    CL16           CONVERSION TO CHARACTERS
CAMSEEK  CAMLST SEEK,*,*,*
CAMLEN   EQU   *-CAMSEEK
         DS    0D
CYLH     DS    F
         DS    X              PAD FOR CCHH
EQ       EQU   1              EQUATES FOR OPERATOR VALUES
NE       EQU   2
LT       EQU   3
LE       EQU   4
GT       EQU   5
GE       EQU   6
HWORK    DS    H
LIMVAL   DS    F
NUMBERL  DS    F
NUMLENL  DS    H
FLAGNML  DS    X
NUMKEYL  DS    X
NUMBER1  DS    F
NUMLEN1  DS    H
FLAGNM1  DS    X
NUMKEY1  DS    X
NUMBER2  DS    F
NUMLEN2  DS    H
FLAGNM2  DS    X
NUMKEY2  DS    X
NUMBER3  DS    F
NUMLEN3  DS    H
FLAGNM3  DS    X
NUMKEY3  DS    X
REFKEY   DS    F
REFOPER  DS    F
REFVAL   DS    A
REFNUM   DS    A
PDLNSAVE DS    8A             REGISTER SAVE AREA FOR PDLNUM RTN
PDLMINUS DC    X'00'
CHEKDBLW DS    D
CCHHCOMP DS    X
CCHHHIGH EQU   X'80'
CCHHEQ   EQU   X'40'
CCHHLOW  EQU   X'20'
CCHHX    EQU   X'08'
         DS    0D
LENWORK  EQU   *-CHEKWORK
*
*        VTOC COMMAND COMMON AREA
*
         PRINT NOGEN
         VTOCOM
         SPACE 3
*
*        FORMATTED DSCB
*
         VTFMT
         SPACE 3
         PDEDSNAM
         SPACE 3
         SPACE 3
DSCB1    DSECT
         IECSDSL1 1
         END
